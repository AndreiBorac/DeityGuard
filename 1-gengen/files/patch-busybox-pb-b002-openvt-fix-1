diff --git a/console-tools/openvt.c b/console-tools/openvt.c
index 5cbc717..75ea20d 100644
--- a/console-tools/openvt.c
+++ b/console-tools/openvt.c
@@ -156,6 +156,16 @@ int openvt_main(int argc UNUSED_PARAM, char **argv)
 	sprintf(vtname, VC_FORMAT, vtno);
 	/* (Try to) clean up stray open fds above fd 2 */
 	bb_daemonize_or_rexec(DAEMON_CLOSE_EXTRA_FDS | DAEMON_ONLY_SANITIZE, NULL);
+        /* save stdin/stdout/stderr descriptors */
+	int fd_saved_stdin  = 7;
+	int fd_saved_stdout = 8;
+	int fd_saved_stderr = 9;
+	xdup2(STDIN_FILENO, fd_saved_stdin);
+	xdup2(STDOUT_FILENO, fd_saved_stdout);
+	xdup2(STDERR_FILENO, fd_saved_stderr);
+	fcntl(fd_saved_stdin, F_SETFD, FD_CLOEXEC);
+	fcntl(fd_saved_stdout, F_SETFD, FD_CLOEXEC);
+	fcntl(fd_saved_stderr, F_SETFD, FD_CLOEXEC);
 	close(STDIN_FILENO);
 	/*setsid(); - BAD IDEA: after we exit, child is SIGHUPed... */
 	xopen(vtname, O_RDWR);
@@ -184,9 +194,14 @@ int openvt_main(int argc UNUSED_PARAM, char **argv)
 #endif
 
 	vfork_child(argv);
+	/* restore old stdin/stdout/stderr */
+	xdup2(fd_saved_stdin, STDIN_FILENO);
+	xdup2(fd_saved_stdout, STDOUT_FILENO);
+	xdup2(fd_saved_stderr, STDERR_FILENO);
 	if (flags & OPT_w) {
 		/* We have only one child, wait for it */
-		safe_waitpid(-1, NULL, 0); /* loops on EINTR */
+		int wstat = 0xBADBAD;
+		safe_waitpid(-1, (&wstat), 0); /* loops on EINTR */
 		if (flags & OPT_s) {
 			console_make_active(STDIN_FILENO, vtstat.v_active);
 			// Compat: even with -c N (try to) disallocate:
@@ -194,6 +209,7 @@ int openvt_main(int argc UNUSED_PARAM, char **argv)
 			// openvt: could not deallocate console 9
 			xioctl(STDIN_FILENO, VT_DISALLOCATE, (void*)(ptrdiff_t)vtno);
 		}
+		return ((wstat != 0xBADBAD) && (WIFEXITED(wstat) && (WEXITSTATUS(wstat) == 0)) ? EXIT_SUCCESS : EXIT_FAILURE);
 	}
 	return EXIT_SUCCESS;
 }
