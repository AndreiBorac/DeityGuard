diff -urN ./overlay_empty/net-libs/nodejs/files/gentoo-global-npm-config.patch ./overlay/net-libs/nodejs/files/gentoo-global-npm-config.patch
--- ./overlay_empty/net-libs/nodejs/files/gentoo-global-npm-config.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-libs/nodejs/files/gentoo-global-npm-config.patch	2017-08-24 13:20:05.993208459 -0700
@@ -0,0 +1,40 @@
+commit 46ac7cd4229eac5e0182ab62b7ed844c24a8c52e
+Author: Johan Bergstr√∂m <bugs@bergstroem.nu>
+Date:   Wed Feb 10 22:45:59 2016 +1100
+
+    npm: set global config folder to /etc/npm
+    
+    npm previously assumed that the global config path would be
+    based on $prefix/etc. Since gentoo installs nodejs into /usr,
+    this means we're also creating /usr/etc which is less desirable.
+    
+    This patch will likely never go upstream.
+
+diff --git a/deps/npm/lib/config/core.js b/deps/npm/lib/config/core.js
+index d1306eb..bd2ef89 100644
+--- a/deps/npm/lib/config/core.js
++++ b/deps/npm/lib/config/core.js
+@@ -150,16 +150,14 @@ function load_ (builtin, rc, cli, cb) {
+     // Eg, `npm config get globalconfig --prefix ~/local` should
+     // return `~/local/etc/npmrc`
+     // annoying humans and their expectations!
+-    if (conf.get('prefix')) {
+-      var etc = path.resolve(conf.get('prefix'), 'etc')
+-      mkdirp(etc, function () {
+-        defaults.globalconfig = path.resolve(etc, 'npmrc')
+-        defaults.globalignorefile = path.resolve(etc, 'npmignore')
+-        afterUserContinuation()
+-      })
+-    } else {
++
++    // gentoo deviates wrt global config; store in /etc/npm
++    var globalconfig = path.resolve('/etc', 'npm')
++    mkdirp(globalconfig, function () {
++      defaults.globalconfig = path.resolve(globalconfig, 'npmrc')
++      defaults.globalignorefile = path.resolve(globalconfig, 'npmignore')
+       afterUserContinuation()
+-    }
++    })
+   }
+ 
+   function afterUserContinuation () {
diff -urN ./overlay_empty/net-libs/nodejs/files/nodejs-8.1.1-libressl.patch ./overlay/net-libs/nodejs/files/nodejs-8.1.1-libressl.patch
--- ./overlay_empty/net-libs/nodejs/files/nodejs-8.1.1-libressl.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-libs/nodejs/files/nodejs-8.1.1-libressl.patch	2017-10-09 16:23:46.123705745 -0700
@@ -0,0 +1,697 @@
+diff -Naur node-v4.6.1.orig/lib/_tls_wrap.js node-v4.6.1/lib/_tls_wrap.js
+--- node-v4.6.1.orig/lib/_tls_wrap.js	2017-04-12 12:40:43.517228944 -0700
++++ node-v4.6.1/lib/_tls_wrap.js	2017-04-12 12:49:51.155877106 -0700
+@@ -165,30 +165,33 @@
+     if (err)
+       return self.destroy(err);
+ 
+-    self._handle.endParser();
+-  });
+-}
+-
+-
+-function oncertcb(info) {
+-  var self = this;
+-  var servername = info.servername;
+-
+-  loadSNI(self, servername, function(err, ctx) {
+-    if (err)
+-      return self.destroy(err);
+-    requestOCSP(self, info, ctx, function(err) {
++    // Servername came from SSL session
++    // NOTE: TLS Session ticket doesn't include servername information
++    //
++    // Another note, From RFC3546:
++    //
++    //   If, on the other hand, the older
++    //   session is resumed, then the server MUST ignore extensions appearing
++    //   in the client hello, and send a server hello containing no
++    //   extensions; in this case the extension functionality negotiated
++    //   during the original session initiation is applied to the resumed
++    //   session.
++    //
++    // Therefore we should account session loading when dealing with servername
++    var servername = session && session.servername || hello.servername;
++    loadSNI(self, servername, function(err, ctx) {
+       if (err)
+         return self.destroy(err);
+ 
+-      if (!self._handle)
+-        return self.destroy(new Error('Socket is closed'));
++      requestOCSP(self, info, ctx, function(err) {
++        if (err)
++          return self.destroy(err);
++
++        if (!self._handle)
++          return self.destroy(new Error('Socket is closed'));
+ 
+-      try {
+-        self._handle.certCbDone();
+-      } catch (e) {
+-        self.destroy(e);
+-      }
++        self._handle.endParser();
++      });
+     });
+   });
+ }
+@@ -410,18 +413,15 @@
+     ssl.onhandshakestart = () => onhandshakestart.call(this);
+     ssl.onhandshakedone = () => onhandshakedone.call(this);
+     ssl.onclienthello = (hello) => onclienthello.call(this, hello);
+-    ssl.oncertcb = (info) => oncertcb.call(this, info);
+     ssl.onnewsession = (key, session) => onnewsession.call(this, key, session);
+     ssl.lastHandshakeTime = 0;
+     ssl.handshakes = 0;
+ 
+-    if (this.server) {
+-      if (this.server.listenerCount('resumeSession') > 0 ||
+-          this.server.listenerCount('newSession') > 0) {
+-        ssl.enableSessionCallbacks();
+-      }
+-      if (this.server.listenerCount('OCSPRequest') > 0)
+-        ssl.enableCertCb();
++    if (this.server &&
++        (this.server.listenerCount('resumeSession') > 0 ||
++         this.server.listenerCount('newSession') > 0 ||
++         this.server.listenerCount('OCSPRequest') > 0)) {
++      ssl.enableSessionCallbacks();
+     }
+   } else {
+     ssl.onhandshakestart = function() {};
+@@ -463,7 +463,7 @@
+        options.server._contexts.length)) {
+     assert(typeof options.SNICallback === 'function');
+     this._SNICallback = options.SNICallback;
+-    ssl.enableCertCb();
++    ssl.enableHelloParser();
+   }
+ 
+   if (process.features.tls_npn && options.NPNProtocols)
+diff -Naur node-v4.6.1.orig/src/env.h node-v4.6.1/src/env.h
+--- node-v4.6.1.orig/src/env.h	2017-04-12 12:40:43.536229174 -0700
++++ node-v4.6.1/src/env.h	2017-04-12 12:50:02.055009418 -0700
+@@ -57,7 +57,6 @@
+   V(bytes_read_string, "bytesRead")                                           \
+   V(callback_string, "callback")                                              \
+   V(change_string, "change")                                                  \
+-  V(oncertcb_string, "oncertcb")                                              \
+   V(onclose_string, "_onclose")                                               \
+   V(code_string, "code")                                                      \
+   V(compare_string, "compare")                                                \
+diff -Naur node-v4.6.1.orig/src/node.cc node-v4.6.1/src/node.cc
+--- node-v4.6.1.orig/src/node.cc     2017-06-08 05:31:34.000000000 -0500
++++ node-v4.6.1/src/node.cc     2017-06-30 10:26:59.945166636 -0500
+@@ -202,7 +202,7 @@
+         false;
+ #endif
+
+-# if NODE_FIPS_MODE
++# if NODE_FIPS_MODE && !defined(LIBRESSL_VERSION_NUMBER)
+ // used by crypto module
+ bool enable_fips_crypto = false;
+ bool force_fips_crypto = false;
+@@ -3676,7 +3676,7 @@
+          " (default)"
+ #endif
+          "\n"
+-#if NODE_FIPS_MODE
++#if NODE_FIPS_MODE && !defined(LIBRESSL_VERSION_NUMBER)
+          "  --enable-fips              enable FIPS crypto at startup\n"
+          "  --force-fips               force FIPS crypto (cannot be disabled)\n"
+ #endif  /* NODE_FIPS_MODE */
+@@ -3926,7 +3926,7 @@
+     } else if (strncmp(arg, "--use-bundled-ca", 16) == 0) {
+       use_bundled_ca = true;
+       ssl_openssl_cert_store = false;
+-#if NODE_FIPS_MODE
++#if NODE_FIPS_MODE && !defined(LIBRESSL_VERSION_NUMBER)
+     } else if (strcmp(arg, "--enable-fips") == 0) {
+       enable_fips_crypto = true;
+     } else if (strcmp(arg, "--force-fips") == 0) {
+@@ -4624,7 +4624,7 @@
+     if (SafeGetenv("NODE_EXTRA_CA_CERTS", &extra_ca_certs))
+       crypto::UseExtraCaCerts(extra_ca_certs);
+   }
+-#ifdef NODE_FIPS_MODE
++#if NODE_FIPS_MODE && !defined(LIBRESSL_VERSION_NUMBER)
+   // In the case of FIPS builds we should make sure
+   // the random source is properly initialized first.
+   OPENSSL_init();
+diff -Naur node-v4.6.1.orig/src/node_crypto.cc node-v4.6.1/src/node_crypto.cc
+--- node-v4.6.1.orig/src/node_crypto.cc	2017-04-12 12:40:43.541229235 -0700
++++ node-v4.6.1/src/node_crypto.cc	2017-04-12 12:52:59.371161636 -0700
+@@ -160,8 +160,6 @@
+ #endif
+ 
+ template void SSLWrap<TLSWrap>::DestroySSL();
+-template int SSLWrap<TLSWrap>::SSLCertCallback(SSL* s, void* arg);
+-template void SSLWrap<TLSWrap>::WaitForCertCb(CertCb cb, void* arg);
+ 
+ 
+ static void crypto_threadid_cb(CRYPTO_THREADID* tid) {
+@@ -525,8 +523,7 @@
+     for (int i = 0; i < sk_X509_num(extra_certs); i++) {
+       X509* ca = sk_X509_value(extra_certs, i);
+ 
+-      // NOTE: Increments reference count on `ca`
+-      r = SSL_CTX_add1_chain_cert(ctx, ca);
++      r = SSL_CTX_add_extra_chain_cert(ctx, ca);
+ 
+       if (!r) {
+         ret = 0;
+@@ -717,7 +717,7 @@
+ }
+
+
+-#if OPENSSL_VERSION_NUMBER < 0x10100000L && !defined(OPENSSL_IS_BORINGSSL)
++#if (OPENSSL_VERSION_NUMBER < 0x10100000L && !defined(OPENSSL_IS_BORINGSSL)) || defined(LIBRESSL_VERSION_NUMBER)
+ // This section contains OpenSSL 1.1.0 functions reimplemented for OpenSSL
+ // 1.0.2 so that the following code can be written without lots of #if lines.
+
+@@ -725,11 +725,12 @@
+   CRYPTO_add(&store->references, 1, CRYPTO_LOCK_X509_STORE);
+   return 1;
+ }
+-
++#if !defined(LIBRESSL_VERSION_NUMBER)
+ static int X509_up_ref(X509* cert) {
+   CRYPTO_add(&cert->references, 1, CRYPTO_LOCK_X509);
+   return 1;
+ }
++#endif
+ #endif  // OPENSSL_VERSION_NUMBER < 0x10100000L && !OPENSSL_IS_BORINGSSL
+
+
+@@ -1194,7 +1194,7 @@
+   SecureContext* wrap;
+   ASSIGN_OR_RETURN_UNWRAP(&wrap, args.Holder());
+
+-  wrap->ctx_->freelist_max_len = args[0]->Int32Value();
++  //wrap->ctx_->freelist_max_len = args[0]->Int32Value();
+ #endif
+ }
+
+@@ -1188,7 +1185,6 @@
+   env->SetProtoMethod(t, "verifyError", VerifyError);
+   env->SetProtoMethod(t, "getCurrentCipher", GetCurrentCipher);
+   env->SetProtoMethod(t, "endParser", EndParser);
+-  env->SetProtoMethod(t, "certCbDone", CertCbDone);
+   env->SetProtoMethod(t, "renegotiate", Renegotiate);
+   env->SetProtoMethod(t, "shutdownSSL", Shutdown);
+   env->SetProtoMethod(t, "getTLSTicket", GetTLSTicket);
+@@ -2411,126 +2411,6 @@
+
+
+ template <class Base>
+-void SSLWrap<Base>::WaitForCertCb(CertCb cb, void* arg) {
+-  cert_cb_ = cb;
+-  cert_cb_arg_ = arg;
+-}
+-
+-
+-template <class Base>
+-int SSLWrap<Base>::SSLCertCallback(SSL* s, void* arg) {
+-  Base* w = static_cast<Base*>(SSL_get_app_data(s));
+-
+-  if (!w->is_server())
+-    return 1;
+-
+-  if (!w->is_waiting_cert_cb())
+-    return 1;
+-
+-  if (w->cert_cb_running_)
+-    return -1;
+-
+-  Environment* env = w->env();
+-  HandleScope handle_scope(env->isolate());
+-  Context::Scope context_scope(env->context());
+-  w->cert_cb_running_ = true;
+-
+-  Local<Object> info = Object::New(env->isolate());
+-
+-  const char* servername = SSL_get_servername(s, TLSEXT_NAMETYPE_host_name);
+-  if (servername == nullptr) {
+-    info->Set(env->servername_string(), String::Empty(env->isolate()));
+-  } else {
+-    Local<String> str = OneByteString(env->isolate(), servername,
+-                                      strlen(servername));
+-    info->Set(env->servername_string(), str);
+-  }
+-
+-  bool ocsp = false;
+-#ifdef NODE__HAVE_TLSEXT_STATUS_CB
+-  ocsp = s->tlsext_status_type == TLSEXT_STATUSTYPE_ocsp;
+-#endif
+-
+-  info->Set(env->ocsp_request_string(), Boolean::New(env->isolate(), ocsp));
+-
+-  Local<Value> argv[] = { info };
+-  w->MakeCallback(env->oncertcb_string(), arraysize(argv), argv);
+-
+-  if (!w->cert_cb_running_)
+-    return 1;
+-
+-  // Performing async action, wait...
+-  return -1;
+-}
+-
+-
+-template <class Base>
+-void SSLWrap<Base>::CertCbDone(const FunctionCallbackInfo<Value>& args) {
+-  Base* w;
+-  ASSIGN_OR_RETURN_UNWRAP(&w, args.Holder());
+-  Environment* env = w->env();
+-
+-  CHECK(w->is_waiting_cert_cb() && w->cert_cb_running_);
+-
+-  Local<Object> object = w->object();
+-  Local<Value> ctx = object->Get(env->sni_context_string());
+-  Local<FunctionTemplate> cons = env->secure_context_constructor_template();
+-
+-  // Not an object, probably undefined or null
+-  if (!ctx->IsObject())
+-    goto fire_cb;
+-
+-  if (cons->HasInstance(ctx)) {
+-    SecureContext* sc;
+-    ASSIGN_OR_RETURN_UNWRAP(&sc, ctx.As<Object>());
+-    w->sni_context_.Reset();
+-    w->sni_context_.Reset(env->isolate(), ctx);
+-
+-    int rv;
+-
+-    // NOTE: reference count is not increased by this API methods
+-    X509* x509 = SSL_CTX_get0_certificate(sc->ctx_);
+-    EVP_PKEY* pkey = SSL_CTX_get0_privatekey(sc->ctx_);
+-    STACK_OF(X509)* chain;
+-
+-    rv = SSL_CTX_get0_chain_certs(sc->ctx_, &chain);
+-    if (rv)
+-      rv = SSL_use_certificate(w->ssl_, x509);
+-    if (rv)
+-      rv = SSL_use_PrivateKey(w->ssl_, pkey);
+-    if (rv && chain != nullptr)
+-      rv = SSL_set1_chain(w->ssl_, chain);
+-    if (rv)
+-      rv = w->SetCACerts(sc);
+-    if (!rv) {
+-      unsigned long err = ERR_get_error();  // NOLINT(runtime/int)
+-      if (!err)
+-        return env->ThrowError("CertCbDone");
+-      return ThrowCryptoError(env, err);
+-    }
+-  } else {
+-    // Failure: incorrect SNI context object
+-    Local<Value> err = Exception::TypeError(env->sni_context_err_string());
+-    w->MakeCallback(env->onerror_string(), 1, &err);
+-    return;
+-  }
+-
+- fire_cb:
+-  CertCb cb;
+-  void* arg;
+-
+-  cb = w->cert_cb_;
+-  arg = w->cert_cb_arg_;
+-
+-  w->cert_cb_running_ = false;
+-  w->cert_cb_ = nullptr;
+-  w->cert_cb_arg_ = nullptr;
+-
+-  cb(arg);
+-}
+-
+-
+-template <class Base>
+ void SSLWrap<Base>::SSLGetter(Local<String> property,
+                               const PropertyCallbackInfo<Value>& info) {
+   Base* base;
+@@ -2232,10 +2105,6 @@
+ 
+ template <class Base>
+ int SSLWrap<Base>::SetCACerts(SecureContext* sc) {
+-  int err = SSL_set1_verify_cert_store(ssl_, SSL_CTX_get_cert_store(sc->ctx_));
+-  if (err != 1)
+-    return err;
+-
+   STACK_OF(X509_NAME)* list = SSL_dup_CA_list(
+       SSL_CTX_get_client_CA_list(sc->ctx_));
+ 
+@@ -2329,10 +2198,6 @@
+     DEBUG_PRINT("[%p] SSL: %s want read\n", ssl_, func);
+     return 0;
+ 
+-  } else if (err == SSL_ERROR_WANT_X509_LOOKUP) {
+-    DEBUG_PRINT("[%p] SSL: %s want x509 lookup\n", ssl_, func);
+-    return 0;
+-
+   } else if (err == SSL_ERROR_ZERO_RETURN) {
+     HandleScope scope(ssl_env()->isolate());
+ 
+@@ -2875,7 +2755,8 @@
+   SSL* ssl = static_cast<SSL*>(
+       X509_STORE_CTX_get_ex_data(ctx, SSL_get_ex_data_X509_STORE_CTX_idx()));
+
+-  if (SSL_is_server(ssl))
++  //if (SSL_is_server(ssl))
++  if(ssl->server)
+     return CHECK_OK;
+
+   // Client needs to check if the server cert is listed in the
+@@ -2540,7 +2405,7 @@
+ 
+     // Call the SNI callback and use its return value as context
+     if (!conn->sniObject_.IsEmpty()) {
+-      conn->sni_context_.Reset();
++      conn->sniContext_.Reset();
+ 
+       Local<Object> sni_obj = PersistentToLocal(env->isolate(),
+                                                 conn->sniObject_);
+@@ -2918,7 +2799,7 @@
+       Local<FunctionTemplate> secure_context_constructor_template =
+           env->secure_context_constructor_template();
+       if (secure_context_constructor_template->HasInstance(ret)) {
+-        conn->sni_context_.Reset(env->isolate(), ret);
++        conn->sniContext_.Reset(env->isolate(), ret);
+         SecureContext* sc;
+         ASSIGN_OR_RETURN_UNWRAP(&sc, ret.As<Object>(), SSL_TLSEXT_ERR_NOACK);
+         conn->SetSNIContext(sc);
+@@ -2594,8 +2459,6 @@
+ 
+   InitNPN(sc);
+ 
+-  SSL_set_cert_cb(conn->ssl_, SSLWrap<Connection>::SSLCertCallback, conn);
+-
+ #ifdef SSL_CTRL_SET_TLSEXT_SERVERNAME_CB
+   if (is_server) {
+     SSL_CTX_set_tlsext_servername_callback(sc->ctx_, SelectSNIContextCallback_);
+@@ -3335,7 +3335,7 @@
+                       int key_buf_len) {
+   HandleScope scope(env()->isolate());
+
+-#ifdef NODE_FIPS_MODE
++#if NODE_FIPS_MODE && !defined(LIBRESSL_VERSION_NUMBER)
+   if (FIPS_mode()) {
+     return env()->ThrowError(
+         "crypto.createCipher() is not supported in FIPS mode.");
+@@ -4185,7 +4185,7 @@
+   if (pkey == nullptr || 0 != ERR_peek_error())
+     goto exit;
+
+-#ifdef NODE_FIPS_MODE
++#if NODE_FIPS_MODE && !defined(LIBRESSL_VERSION_NUMBER)
+   /* Validate DSA2 parameters from FIPS 186-4 */
+   if (FIPS_mode() && EVP_PKEY_DSA == pkey->type) {
+     size_t L = BN_num_bits(pkey->pkey.dsa->p);
+@@ -6132,7 +6132,7 @@
+   CRYPTO_set_locking_callback(crypto_lock_cb);
+   CRYPTO_THREADID_set_callback(crypto_threadid_cb);
+
+-#ifdef NODE_FIPS_MODE
++#if NODE_FIPS_MODE && !defined(LIBRESSL_VERSION_NUMBER)
+   /* Override FIPS settings in cnf file, if needed. */
+   unsigned long err = 0;  // NOLINT(runtime/int)
+   if (enable_fips_crypto || force_fips_crypto) {
+@@ -6201,16 +6201,20 @@
+ #endif  // !OPENSSL_NO_ENGINE
+
+ void GetFipsCrypto(const FunctionCallbackInfo<Value>& args) {
++#if NODE_FIPS_MODE && !defined(LIBRESSL_VERSION_NUMBER)
+   if (FIPS_mode()) {
+     args.GetReturnValue().Set(1);
+   } else {
+     args.GetReturnValue().Set(0);
+   }
++#else
++  args.GetReturnValue().Set(0);
++#endif
+ }
+
+ void SetFipsCrypto(const FunctionCallbackInfo<Value>& args) {
+   Environment* env = Environment::GetCurrent(args);
+-#ifdef NODE_FIPS_MODE
++#if NODE_FIPS_MODE && !defined(LIBRESSL_VERSION_NUMBER)
+   bool mode = args[0]->BooleanValue();
+   if (force_fips_crypto) {
+     return env->ThrowError(
+diff -Naur node-v4.6.1.orig/src/node_crypto.h node-v4.6.1/src/node_crypto.h
+--- node-v4.6.1.orig/src/node_crypto.h	2017-04-12 12:40:43.541229235 -0700
++++ node-v4.6.1/src/node_crypto.h	2017-04-12 12:55:08.867710808 -0700
+@@ -179,10 +179,7 @@
+         kind_(kind),
+         next_sess_(nullptr),
+         session_callbacks_(false),
+-        new_session_wait_(false),
+-        cert_cb_(nullptr),
+-        cert_cb_arg_(nullptr),
+-        cert_cb_running_(false) {
++        new_session_wait_(false) {
+     ssl_ = SSL_new(sc->ctx_);
+     env_->isolate()->AdjustAmountOfExternalAllocatedMemory(kExternalSize);
+     CHECK_NE(ssl_, nullptr);
+@@ -200,9 +200,6 @@
+       next_sess_ = nullptr;
+     }
+
+-#ifdef SSL_CTRL_SET_TLSEXT_SERVERNAME_CB
+-    sni_context_.Reset();
+-#endif
+
+ #ifdef NODE__HAVE_TLSEXT_STATUS_CB
+     ocsp_response_.Reset();
+@@ -212,11 +206,8 @@
+   inline bool is_server() const { return kind_ == kServer; }
+   inline bool is_client() const { return kind_ == kClient; }
+   inline bool is_waiting_new_session() const { return new_session_wait_; }
+-  inline bool is_waiting_cert_cb() const { return cert_cb_ != nullptr; }
+ 
+  protected:
+-  typedef void (*CertCb)(void* arg);
+-
+   // Size allocated by OpenSSL: one for SSL structure, one for SSL3_STATE and
+   // some for buffers.
+   // NOTE: Actually it is much more than this
+@@ -244,7 +235,6 @@
+   static void VerifyError(const v8::FunctionCallbackInfo<v8::Value>& args);
+   static void GetCurrentCipher(const v8::FunctionCallbackInfo<v8::Value>& args);
+   static void EndParser(const v8::FunctionCallbackInfo<v8::Value>& args);
+-  static void CertCbDone(const v8::FunctionCallbackInfo<v8::Value>& args);
+   static void Renegotiate(const v8::FunctionCallbackInfo<v8::Value>& args);
+   static void Shutdown(const v8::FunctionCallbackInfo<v8::Value>& args);
+   static void GetTLSTicket(const v8::FunctionCallbackInfo<v8::Value>& args);
+@@ -273,12 +263,10 @@
+                                      void* arg);
+ #endif  // OPENSSL_NPN_NEGOTIATED
+   static int TLSExtStatusCallback(SSL* s, void* arg);
+-  static int SSLCertCallback(SSL* s, void* arg);
+   static void SSLGetter(v8::Local<v8::String> property,
+                         const v8::PropertyCallbackInfo<v8::Value>& info);
+ 
+   void DestroySSL();
+-  void WaitForCertCb(CertCb cb, void* arg);
+   void SetSNIContext(SecureContext* sc);
+   int SetCACerts(SecureContext* sc);
+ 
+@@ -293,11 +281,6 @@
+   bool session_callbacks_;
+   bool new_session_wait_;
+ 
+-  // SSL_set_cert_cb
+-  CertCb cert_cb_;
+-  void* cert_cb_arg_;
+-  bool cert_cb_running_;
+-
+   ClientHelloParser hello_parser_;
+ 
+ #ifdef NODE__HAVE_TLSEXT_STATUS_CB
+@@ -309,10 +292,6 @@
+   v8::Persistent<v8::Value> selected_npn_proto_;
+ #endif  // OPENSSL_NPN_NEGOTIATED
+ 
+-#ifdef SSL_CTRL_SET_TLSEXT_SERVERNAME_CB
+-  v8::Persistent<v8::Value> sni_context_;
+-#endif
+-
+   friend class SecureContext;
+ };
+ 
+@@ -324,6 +303,7 @@
+   ~Connection() override {
+ #ifdef SSL_CTRL_SET_TLSEXT_SERVERNAME_CB
+     sniObject_.Reset();
++    sniContext_.Reset();
+     servername_.Reset();
+ #endif
+   }
+@@ -338,6 +318,7 @@
+ 
+ #ifdef SSL_CTRL_SET_TLSEXT_SERVERNAME_CB
+   v8::Persistent<v8::Object> sniObject_;
++  v8::Persistent<v8::Value> sniContext_;
+   v8::Persistent<v8::String> servername_;
+ #endif
+ 
+diff -Naur node-v4.6.1.orig/src/tls_wrap.cc node-v4.6.1/src/tls_wrap.cc
+--- node-v4.6.1.orig/src/tls_wrap.cc	2017-04-12 12:40:43.557229429 -0700
++++ node-v4.6.1/src/tls_wrap.cc	2017-04-12 13:36:49.323009154 -0700
+@@ -141,8 +141,6 @@
+ 
+   InitNPN(sc_);
+ 
+-  SSL_set_cert_cb(ssl_, SSLWrap<TLSWrap>::SSLCertCallback, this);
+-
+   if (is_server()) {
+     SSL_set_accept_state(ssl_);
+   } else if (is_client()) {
+@@ -353,7 +351,6 @@
+     case SSL_ERROR_NONE:
+     case SSL_ERROR_WANT_READ:
+     case SSL_ERROR_WANT_WRITE:
+-    case SSL_ERROR_WANT_X509_LOOKUP:
+       break;
+     case SSL_ERROR_ZERO_RETURN:
+       return scope.Escape(env()->zero_return_string());
+@@ -769,6 +766,11 @@
+         "EnableSessionCallbacks after destroySSL");
+   }
+   wrap->enable_session_callbacks();
++  EnableHelloParser(args);
++}
++
++void TLSWrap::EnableHelloParser(const FunctionCallbackInfo<Value>& args) {
++  TLSWrap* wrap = Unwrap<TLSWrap>(args.Holder());
+   NodeBIO::FromBIO(wrap->enc_in_)->set_initial(kMaxHelloLength);
+   wrap->hello_parser_.Start(SSLWrap<TLSWrap>::OnClientHello,
+                             OnClientHelloParseEnd,
+@@ -833,13 +833,6 @@
+ }
+ 
+ 
+-void TLSWrap::EnableCertCb(const FunctionCallbackInfo<Value>& args) {
+-  TLSWrap* wrap;
+-  ASSIGN_OR_RETURN_UNWRAP(&wrap, args.Holder());
+-  wrap->WaitForCertCb(OnClientHelloParseEnd, wrap);
+-}
+-
+-
+ void TLSWrap::OnClientHelloParseEnd(void* arg) {
+   TLSWrap* c = static_cast<TLSWrap*>(arg);
+   c->Cycle();
+@@ -896,8 +892,8 @@
+   env->SetProtoMethod(t, "start", Start);
+   env->SetProtoMethod(t, "setVerifyMode", SetVerifyMode);
+   env->SetProtoMethod(t, "enableSessionCallbacks", EnableSessionCallbacks);
++  env->SetProtoMethod(t, "enableHelloParser", EnableHelloParser);
+   env->SetProtoMethod(t, "destroySSL", DestroySSL);
+-  env->SetProtoMethod(t, "enableCertCb", EnableCertCb);
+ 
+   StreamBase::AddMethods<TLSWrap>(env, t, StreamBase::kFlagHasWritev);
+   SSLWrap<TLSWrap>::AddMethods(env, t);
+diff -Naur node-v4.6.1.orig/src/tls_wrap.h node-v4.6.1/src/tls_wrap.h
+--- node-v4.6.1.orig/src/tls_wrap.h	2017-04-12 12:40:43.558229441 -0700
++++ node-v4.6.1/src/tls_wrap.h	2017-04-12 13:35:51.214213644 -0700
+@@ -132,7 +132,7 @@
+   static void SetVerifyMode(const v8::FunctionCallbackInfo<v8::Value>& args);
+   static void EnableSessionCallbacks(
+       const v8::FunctionCallbackInfo<v8::Value>& args);
+-  static void EnableCertCb(
++  static void EnableHelloParser(
+       const v8::FunctionCallbackInfo<v8::Value>& args);
+   static void DestroySSL(const v8::FunctionCallbackInfo<v8::Value>& args);
+ 
+@@ -160,6 +160,10 @@
+   // If true - delivered EOF to the js-land, either after `close_notify`, or
+   // after the `UV_EOF` on socket.
+   bool eof_;
++
++#ifdef SSL_CTRL_SET_TLSEXT_SERVERNAME_CB
++  v8::Persistent<v8::Value> sni_context_;
++#endif  // SSL_CTRL_SET_TLSEXT_SERVERNAME_CB
+ };
+ 
+ }  // namespace node
+diff -Naur node-v4.6.1.orig/test/parallel/test-tls-cnnic-whitelist.js node-v4.6.1/test/parallel/test-tls-cnnic-whitelist.js
+--- node-v4.6.1.orig/test/parallel/test-tls-cnnic-whitelist.js	2017-04-12 12:40:43.865233168 -0700
++++ node-v4.6.1/test/parallel/test-tls-cnnic-whitelist.js	2017-04-12 12:58:14.901936343 -0700
+@@ -53,7 +53,9 @@
+       port: undefined,
+       rejectUnauthorized: true
+     },
+-    errorCode: 'UNABLE_TO_GET_ISSUER_CERT_LOCALLY'
++    // LibreSSL returns CERT_UNTRUSTED in this case, OpenSSL UNABLE_TO_GET_ISSUER_CERT_LOCALLY.
++    errorCode: 'CERT_UNTRUSTED'
++    // errorCode: 'UNABLE_TO_GET_ISSUER_CERT_LOCALLY'
+   }
+ ];
+ 
+diff -Naur node-v4.6.1.orig/test/parallel/test-tls-sni-server-client.js node-v4.6.1/test/parallel/test-tls-sni-server-client.js
+--- node-v4.6.1.orig/test/parallel/test-tls-sni-server-client.js	2017-04-12 12:40:43.878233326 -0700
++++ node-v4.6.1/test/parallel/test-tls-sni-server-client.js	2017-04-12 13:00:18.804418594 -0700
+@@ -56,39 +56,37 @@
+   'asterisk.test.com': {
+     key: loadPEM('agent3-key'),
+     cert: loadPEM('agent3-cert')
+-  },
+-  'chain.example.com': {
+-    key: loadPEM('agent6-key'),
+-    // NOTE: Contains ca3 chain cert
+-    cert: loadPEM('agent6-cert')
+   }
+ };
+ 
+ const clientsOptions = [{
+   port: undefined,
++  key: loadPEM('agent1-key'),
++  cert: loadPEM('agent1-cert'),
+   ca: [loadPEM('ca1-cert')],
+   servername: 'a.example.com',
+   rejectUnauthorized: false
+ }, {
+   port: undefined,
++  key: loadPEM('agent2-key'),
++  cert: loadPEM('agent2-cert'),
+   ca: [loadPEM('ca2-cert')],
+   servername: 'b.test.com',
+   rejectUnauthorized: false
+ }, {
+   port: undefined,
++  key: loadPEM('agent2-key'),
++  cert: loadPEM('agent2-cert'),
+   ca: [loadPEM('ca2-cert')],
+   servername: 'a.b.test.com',
+   rejectUnauthorized: false
+ }, {
+   port: undefined,
++  key: loadPEM('agent3-key'),
++  cert: loadPEM('agent3-cert'),
+   ca: [loadPEM('ca1-cert')],
+   servername: 'c.wrong.com',
+   rejectUnauthorized: false
+-}, {
+-  port: undefined,
+-  ca: [loadPEM('ca1-cert')],
+-  servername: 'chain.example.com',
+-  rejectUnauthorized: false
+ }];
+ 
+ const serverResults = [];
+@@ -80,7 +78,6 @@
+ 
+ server.addContext('a.example.com', SNIContexts['a.example.com']);
+ server.addContext('*.test.com', SNIContexts['asterisk.test.com']);
+-server.addContext('chain.example.com', SNIContexts['chain.example.com']);
+ 
+ server.listen(0, startTest);
+
+@@ -128,8 +126,7 @@
+
+ process.on('exit', function() {
+   assert.deepStrictEqual(serverResults, [
+-    'a.example.com', 'b.test.com', 'a.b.test.com', 'c.wrong.com',
+-    'chain.example.com'
++    'a.example.com', 'b.test.com', 'a.b.test.com', 'c.wrong.com'
+   ]);
+-  assert.deepStrictEqual(clientResults, [true, true, false, false, true]);
++  assert.deepStrictEqual(clientResults, [true, true, false, false]);
+ });
diff -urN ./overlay_empty/net-libs/nodejs/Manifest ./overlay/net-libs/nodejs/Manifest
--- ./overlay_empty/net-libs/nodejs/Manifest	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-libs/nodejs/Manifest	2017-10-16 18:43:57.740489262 -0700
@@ -0,0 +1 @@
+DIST node-v8.1.1.tar.xz 17732728 SHA256 7b0d176dc4a1db37789e009825ba03d2e3f834227e5efd296167e7ef6b287847 SHA512 2248e8c53e795023e37a3275b062dab0df76df2a41d9a4efdcd246c8cd4d2e585539448022ef9a8e2d2ea641e18abf9a753e2b86ab9a6d1d283948b175a868e0 WHIRLPOOL ca8c5d2f72c0bd3eac675011a8494794eb535de6537f38f7222e3d0812c095b99e6cb821c342b3a5483fd5076d6924d8083501c2dbb57a8a0c6b9a07509a6fec
diff -urN ./overlay_empty/net-libs/nodejs/metadata.xml ./overlay/net-libs/nodejs/metadata.xml
--- ./overlay_empty/net-libs/nodejs/metadata.xml	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-libs/nodejs/metadata.xml	2017-08-24 13:20:05.993208459 -0700
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
+<pkgmetadata>
+	<maintainer type="person">
+                <email>bugs@bergstroem.nu</email>
+                <name>Johan Bergstroem</name>
+        </maintainer>
+	<maintainer type="person">
+		<email>patrick@gentoo.org</email>
+		<name>Patrick Lauer</name>
+	</maintainer>
+	<maintainer type="project">
+                <email>proxy-maint@gentoo.org</email>
+                <name>Proxy Maintainers</name>
+        </maintainer>
+	<use>
+	<flag name="npm">Enable NPM package manager</flag>
+	<flag name="snapshot">Enable snapshot creation for faster startup</flag>
+	<flag name="systemtap">Enable SystemTAP/DTrace tracing</flag>
+	</use>
+</pkgmetadata>
diff -urN ./overlay_empty/net-libs/nodejs/nodejs-8.1.1.ebuild ./overlay/net-libs/nodejs/nodejs-8.1.1.ebuild
--- ./overlay_empty/net-libs/nodejs/nodejs-8.1.1.ebuild	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-libs/nodejs/nodejs-8.1.1.ebuild	2017-10-09 16:23:46.123705745 -0700
@@ -0,0 +1,195 @@
+# Copyright 1999-2017 Gentoo Foundation
+# Distributed under the terms of the GNU General Public License v2
+
+EAPI=6
+RESTRICT="test"
+
+PYTHON_COMPAT=( python2_7 )
+PYTHON_REQ_USE="threads"
+
+inherit bash-completion-r1 eutils flag-o-matic pax-utils python-single-r1 toolchain-funcs
+
+DESCRIPTION="A JavaScript runtime built on Chrome's V8 JavaScript engine"
+HOMEPAGE="https://nodejs.org/"
+SRC_URI="https://nodejs.org/dist/v${PV}/node-v${PV}.tar.xz"
+
+LICENSE="Apache-1.1 Apache-2.0 BSD BSD-2 MIT"
+SLOT="0"
+KEYWORDS="~amd64 ~arm ~arm64 ~ppc ~ppc64 ~x86 ~amd64-linux ~x64-macos"
+IUSE="cpu_flags_x86_sse2 debug doc icu +npm +snapshot +ssl systemtap test"
+
+RDEPEND="icu? ( >=dev-libs/icu-56:= )
+	npm? ( ${PYTHON_DEPS} )
+	>=net-libs/http-parser-2.6.2:=
+	>=dev-libs/libuv-1.11.0:=
+    dev-libs/libressl	
+	sys-libs/zlib"
+DEPEND="${RDEPEND}
+	${PYTHON_DEPS}
+	systemtap? ( dev-util/systemtap )
+	test? ( net-misc/curl )"
+
+S="${WORKDIR}/node-v${PV}"
+REQUIRED_USE="${PYTHON_REQUIRED_USE}"
+
+PATCHES=(
+	"${FILESDIR}"/gentoo-global-npm-config.patch
+	"${FILESDIR}"/nodejs-8.1.1-libressl.patch
+)
+
+pkg_pretend() {
+	(use x86 && ! use cpu_flags_x86_sse2) && \
+		die "Your CPU doesn't support the required SSE2 instruction."
+
+	( [[ ${MERGE_TYPE} != "binary" ]] && ! test-flag-CXX -std=c++11 ) && \
+		die "Your compiler doesn't support C++11. Use GCC 4.8, Clang 3.3 or newer."
+}
+
+src_prepare() {
+	tc-export CC CXX PKG_CONFIG
+	export V=1
+	export BUILDTYPE=Release
+
+	# fix compilation on Darwin
+	# https://code.google.com/p/gyp/issues/detail?id=260
+	sed -i -e "/append('-arch/d" tools/gyp/pylib/gyp/xcode_emulation.py || die
+
+	# make sure we use python2.* while using gyp
+	sed -i -e "s/python/${EPYTHON}/" deps/npm/node_modules/node-gyp/gyp/gyp || die
+	sed -i -e "s/|| 'python'/|| '${EPYTHON}'/" deps/npm/node_modules/node-gyp/lib/configure.js || die
+
+	# less verbose install output (stating the same as portage, basically)
+	sed -i -e "/print/d" tools/install.py || die
+
+	# proper libdir, hat tip @ryanpcmcquen https://github.com/iojs/io.js/issues/504
+	local LIBDIR=$(get_libdir)
+	sed -i -e "s|lib/|${LIBDIR}/|g" tools/install.py || die
+	sed -i -e "s/'lib'/'${LIBDIR}'/" lib/module.js || die
+	sed -i -e "s|\"lib\"|\"${LIBDIR}\"|" deps/npm/lib/npm.js || die
+
+	# Avoid writing a depfile, not useful
+	sed -i -e "/DEPFLAGS =/d" tools/gyp/pylib/gyp/generator/make.py || die
+
+	# Avoid a test that I've only been able to reproduce from emerge. It doesnt
+	# seem sandbox related either (invoking it from a sandbox works fine).
+	# The issue is that no stdin handle is openened when asked for one.
+	# It doesn't really belong upstream , so it'll just be removed until someone
+	# with more gentoo-knowledge than me (jbergstroem) figures it out.
+	rm test/parallel/test-stdout-close-unref.js || die
+
+	# debug builds. change install path, remove optimisations and override buildtype
+	if use debug; then
+		sed -i -e "s|out/Release/|out/Debug/|g" tools/install.py || die
+		BUILDTYPE=Debug
+	fi
+
+	default
+}
+
+src_configure() {
+	local myarch=""
+	local myconf=( --shared-openssl --shared-libuv --shared-http-parser --shared-zlib )
+	use npm || myconf+=( --without-npm )
+	use icu && myconf+=( --with-intl=system-icu )
+	use snapshot && myconf+=( --with-snapshot )
+	use ssl || myconf+=( --without-ssl )
+	use debug && myconf+=( --debug )
+
+	case ${ABI} in
+		amd64) myarch="x64";;
+		arm) myarch="arm";;
+		arm64) myarch="arm64";;
+		ppc64) myarch="ppc64";;
+		x32) myarch="x32";;
+		x86) myarch="ia32";;
+		*) myarch="${ABI}";;
+	esac
+
+	GYP_DEFINES="linux_use_gold_flags=0
+		linux_use_bundled_binutils=0
+		linux_use_bundled_gold=0" \
+	"${PYTHON}" configure \
+		--prefix="${EPREFIX}"/usr \
+		--dest-cpu=${myarch} \
+		$(use_with systemtap dtrace) \
+		"${myconf[@]}" || die
+}
+
+src_compile() {
+	emake -C out mksnapshot
+	pax-mark m "out/${BUILDTYPE}/mksnapshot"
+	emake -C out
+}
+
+src_install() {
+	local LIBDIR="${ED}/usr/$(get_libdir)"
+	emake install DESTDIR="${D}"
+	pax-mark -m "${ED}"usr/bin/node
+
+	# set up a symlink structure that node-gyp expects..
+	dodir /usr/include/node/deps/{v8,uv}
+	dosym . /usr/include/node/src
+	for var in deps/{uv,v8}/include; do
+		dosym ../.. /usr/include/node/${var}
+	done
+
+	if use doc; then
+		# Patch docs to make them offline readable
+		for i in `grep -rl 'fonts.googleapis.com' "${S}"/out/doc/api/*`; do
+			sed -i '/fonts.googleapis.com/ d' $i;
+		done
+		# Install docs!
+		dohtml -r "${S}"/doc/*
+	fi
+
+	if use npm; then
+		dodir /etc/npm
+
+		# Install bash completion for `npm`
+		# We need to temporarily replace default config path since
+		# npm otherwise tries to write outside of the sandbox
+		local npm_config="usr/$(get_libdir)/node_modules/npm/lib/config/core.js"
+		sed -i -e "s|'/etc'|'${ED}/etc'|g" "${ED}/${npm_config}" || die
+		local tmp_npm_completion_file="$(emktemp)"
+		"${ED}/usr/bin/npm" completion > "${tmp_npm_completion_file}"
+		newbashcomp "${tmp_npm_completion_file}" npm
+		sed -i -e "s|'${ED}/etc'|'/etc'|g" "${ED}/${npm_config}" || die
+
+		# Move man pages
+		doman "${LIBDIR}"/node_modules/npm/man/man{1,5,7}/*
+
+		# Clean up
+		rm "${LIBDIR}"/node_modules/npm/{.mailmap,.npmignore,Makefile} || die
+		rm -rf "${LIBDIR}"/node_modules/npm/{doc,html,man} || die
+
+		local find_exp="-or -name"
+		local find_name=()
+		for match in "AUTHORS*" "CHANGELOG*" "CONTRIBUT*" "README*" \
+			".travis.yml" ".eslint*" ".wercker.yml" ".npmignore" \
+			"*.md" "*.markdown" "*.bat" "*.cmd"; do
+			find_name+=( ${find_exp} "${match}" )
+		done
+
+		# Remove various development and/or inappropriate files and
+		# useless docs of dependend packages.
+		find "${LIBDIR}"/node_modules \
+			\( -type d -name examples \) -or \( -type f \( \
+				-iname "LICEN?E*" \
+				"${find_name[@]}" \
+			\) \) -exec rm -rf "{}" \;
+	fi
+}
+
+src_test() {
+	out/${BUILDTYPE}/cctest || die
+	"${PYTHON}" tools/test.py --mode=${BUILDTYPE,,} -J message parallel sequential || die
+}
+
+pkg_postinst() {
+	einfo "The global npm config lives in /etc/npm. This deviates slightly"
+	einfo "from upstream which otherwise would have it live in /usr/etc/."
+	einfo ""
+	einfo "Protip: When using node-gyp to install native modules, you can"
+	einfo "avoid having to download extras by doing the following:"
+	einfo "$ node-gyp --nodedir /usr/include/node <command>"
+}
diff -urN ./overlay_empty/net-misc/tightvnc/files/1.3.10-sparc.patch ./overlay/net-misc/tightvnc/files/1.3.10-sparc.patch
--- ./overlay_empty/net-misc/tightvnc/files/1.3.10-sparc.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/1.3.10-sparc.patch	2017-10-16 18:42:46.870881756 -0700
@@ -0,0 +1,24 @@
+diff -ur vnc_unixsrc.orig/Xvnc/programs/Xserver/include/servermd.h vnc_unixsrc/Xvnc/programs/Xserver/include/servermd.h
+--- vnc_unixsrc.orig/Xvnc/programs/Xserver/include/servermd.h	2009-11-04 18:44:50.000000000 +0000
++++ vnc_unixsrc/Xvnc/programs/Xserver/include/servermd.h	2009-11-04 18:47:48.000000000 +0000
+@@ -421,6 +421,20 @@
+ 
+ #endif /* Linux/PPC */
+ 
++#if defined (linux) && defined(__sparc__)
++
++#define IMAGE_BYTE_ORDER       MSBFirst
++#define BITMAP_BIT_ORDER       MSBFirst
++#define GLYPHPADBYTES          4
++#define GETLEFTBITS_ALIGNMENT  1
++
++#define AVOID_MEMORY_READ 
++#define LARGE_INSTRUCTION_CACHE
++#define FAST_CONSTANT_OFFSET_MODE
++#define SHARED_IDCACHE
++
++#endif /* Linux/sparc */
++
+ #if defined(__MACH__) && defined(__POWERPC__)
+ 
+ #define IMAGE_BYTE_ORDER       MSBFirst
\ No newline at end of file
diff -urN ./overlay_empty/net-misc/tightvnc/files/1.3.9-arm.patch ./overlay/net-misc/tightvnc/files/1.3.9-arm.patch
--- ./overlay_empty/net-misc/tightvnc/files/1.3.9-arm.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/1.3.9-arm.patch	2017-10-16 18:42:46.870881756 -0700
@@ -0,0 +1,12 @@
+diff -ur vnc_unixsrc.orig/Xvnc/config/cf/Imake.cf vnc_unixsrc/Xvnc/config/cf/Imake.cf
+--- vnc_unixsrc.orig/Xvnc/config/cf/Imake.cf	2008-09-24 18:50:40.000000000 +0200
++++ vnc_unixsrc/Xvnc/config/cf/Imake.cf	2008-09-24 18:51:37.000000000 +0200
+@@ -711,7 +711,7 @@
+ #  undef __alpha__
+ # endif /* __alpha__ */
+ # ifdef __arm__
+-#  define Arm32Architecture
++#  define ArmArchitecture
+ #  undef arm
+ #  undef __arm
+ #  undef __arm__
diff -urN ./overlay_empty/net-misc/tightvnc/files/1.3.9-fbsd.patch ./overlay/net-misc/tightvnc/files/1.3.9-fbsd.patch
--- ./overlay_empty/net-misc/tightvnc/files/1.3.9-fbsd.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/1.3.9-fbsd.patch	2017-10-16 18:42:46.874881848 -0700
@@ -0,0 +1,29 @@
+--- Xvnc/include/Xos.bak        2007-03-23 18:26:14 +0100
++++ Xvnc/include/Xos.h  2007-03-23 18:26:22 +0100
+@@ -150,11 +150,6 @@
+ #endif
+ #endif /* X_NOT_POSIX else */
+
+-#ifdef CSRG_BASED
+-#include <stdlib.h>
+-#include <unistd.h>
+-#endif /* CSRG_BASED */
+-
+ /*
+  * Get struct timeval
+  */
+ 
+--- Xvnc/config/imake/imakemdep.h~      2003-02-19 09:39:54 -0700
++++ Xvnc/config/imake/imakemdep.h       2007-06-27 09:54:44 -0600
+@@ -253,7 +253,10 @@
+ #ifdef _CRAY
+ #define DEFAULT_CPP "/lib/pcpp"
+ #endif
+-#if defined(__386BSD__) || defined(__NetBSD__) || defined(__OpenBSD__) || defined(__FreeBSD__)
++#if defined(__FreeBSD__)
++#define DEFAULT_CPP "/usr/bin/cpp"
++#endif
++#if defined(__386BSD__) || defined(__NetBSD__) || defined(__OpenBSD__)
+ #define DEFAULT_CPP "/usr/libexec/cpp"
+ #endif
+ #if defined(__sgi) && defined(__ANSI_CPP__)
diff -urN ./overlay_empty/net-misc/tightvnc/files/1.3.9-sh.patch ./overlay/net-misc/tightvnc/files/1.3.9-sh.patch
--- ./overlay_empty/net-misc/tightvnc/files/1.3.9-sh.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/1.3.9-sh.patch	2017-10-16 18:42:46.874881848 -0700
@@ -0,0 +1,28 @@
+diff -ur vnc_unixsrc.orig/Xvnc/config/cf/linux.cf vnc_unixsrc/Xvnc/config/cf/linux.cf
+--- vnc_unixsrc.orig/Xvnc/config/cf/linux.cf	2009-01-01 11:41:14.000000000 +0100
++++ vnc_unixsrc/Xvnc/config/cf/linux.cf	2009-01-01 11:44:08.000000000 +0100
+@@ -43,7 +43,8 @@
+ #if defined(AlphaArchitecture) || defined(PowerPCArchitecture) || \
+     defined(SparcArchitecture) || defined(ArmArchitecure) || \
+     defined(i386Architecture) || defined(s390Architecture) || \
+-    defined(s390xArchitecture) || defined(MipsArchitecture)
++    defined(s390xArchitecture) || defined(MipsArchitecture) || \
++    defined(SuperHArchitecture)
+ #define DefaultLinuxCLibMajorVersion	6
+ #else
+ #define DefaultLinuxCLibMajorVersion	5
+@@ -312,6 +313,14 @@
+ #define ServerExtraDefines	-DGCCUSESGAS XFree86ServerDefines
+ #endif /* Arm */
+ 
++#ifdef SuperHArchitecture
++#define DefaultCCOptions	-fsigned-char
++#define OptimizedCDebugFlags	-O2
++#define LinuxMachineDefines	-D__sh__
++#define ServerOSDefines		XFree86ServerOSDefines -DDDXTIME -DPART_NET
++#define ServerExtraDefines	-DGCCUSESGAS XFree86ServerDefines
++#endif /* SuperH */
++
+ #ifdef SparcArchitecture
+ #define OptimizedCDebugFlags	-O2
+ #define LinuxMachineDefines 	-D__sparc__
\ No newline at end of file
diff -urN ./overlay_empty/net-misc/tightvnc/files/README.JavaViewer ./overlay/net-misc/tightvnc/files/README.JavaViewer
--- ./overlay_empty/net-misc/tightvnc/files/README.JavaViewer	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/README.JavaViewer	2017-10-16 18:42:46.874881848 -0700
@@ -0,0 +1,423 @@
+
+TightVNC Java Viewer version 1.2.7
+==================================
+
+Copyright (C) 2001,2002 HorizonLive.com, Inc.  All Rights Reserved.
+Copyright (C) 2001,2002 Constantin Kaplinsky.  All Rights Reserved.
+Copyright (C) 1999 AT&T Laboratories Cambridge.  All Rights Reserved.
+
+This software is distributed under the GNU General Public Licence as
+published by the Free Software Foundation. See the file LICENCE.TXT for the
+conditions under which this software is made available. TightVNC also
+contains code from other sources. See the Acknowledgements section below, and
+the individual files for details of the conditions under which they are made
+available.
+
+
+Compiling from the sources
+==========================
+
+To compile all the .java files to .class files, simply do:
+
+	% make all
+
+This will also generate a JAR (Java archive) file containing all the classes. 
+Most JVM (Java Virtual Machine) implementations are able to use either a set
+of .class files, or the JAR archive.
+
+
+Installation
+============
+
+There are three basic ways to use TightVNC Java viewer:
+
+  1. Running applet as part of TightVNC server installation.
+
+     Both the Unix and Windows versions of TightVNC servers include small
+     built-in HTTP server which can serve Java viewer to Web clients. This
+     enables easy Web access to the shared desktop without need to install
+     any software on the client computer. Unix and Windows versions of
+     TightVNC servers are different in the way they store the .class and .jar
+     files: the Unix server (Xvnc) is able to serve any set of files present
+     in a particular directory, while the Windows server (WinVNC) has all the
+     .class and .jar files inside the WinVNC executable file. Therefore, for
+     Xvnc, it's enough to copy the files into a correct directory, but for
+     WinVNC, the server binaries should be rebuild if the built-in Java
+     viewer should be updated.
+
+     To install the Java viewer under Xvnc, copy all the .class files, the
+     .jar file and the .vnc files to an installation directory (e.g.
+     /usr/local/vnc/classes):
+
+         cp *.class *.jar *.vnc /usr/local/vnc/classes
+
+     Also, make sure that the vncserver script is configured to point to the
+     installation directory (see the Xvnc manual page for the description of
+     the -httpd command-line option).
+
+  2. Running applet hosted on a standalone Web server.
+
+     Another possibility to use the Java viewer is to install it under a
+     fully-functional HTTP server such as Apache or IIS. Obviously, this
+     method requires running an HTTP server, and due to the Java security
+     restrictions, it's also required that the server should be installed on
+     the same machine which is running the TightVNC server. In this case,
+     installation is simply copying the .class and .jar files into a
+     directory that is under control of the HTTP server. Also, an HTML page
+     should be created which will act as a the base document for the viewer
+     applet (see an example named index.html in this distribution).
+
+  3. Running the viewer as a standalone application.
+
+     Finally, the Java viewer can be executed locally on the client machine,
+     but this method requires installation of either JRE (Java Runtime
+     Environment) or JDK (Java Development Kit). If all the .class files are
+     in the current directory, the Java viewer can be executed like this,
+     from the command line:
+
+         java VncViewer HOST vnchost PORT 5900
+
+     The parameters HOST and PORT are required, but there is a number of
+     optional parameters as well (see the Parameters section below).
+
+Parameters
+==========
+
+TightVNC Java viewer supports a number of parameters allowing you to
+customize its behaviour. Most parameter names copy settings available from
+the Options frame in the Java viewer. Both parameter names and their values
+are case-insensitive, with one exception for the "PASSWORD" parameter. Here
+is the full list of parameters supported in TightVNC Java viewer:
+
+--> "HOST" (no GUI equivalent)
+
+    Value: host name or IP address of the VNC server.
+    Default: in applet mode, the host from which the applet was loaded.
+
+    This parameter tells the viewer which server to connect to. Normally,
+    it's not needed, because default Java security policy allow connections
+    from applets to the only one host anyway, and that is the host from which
+    the applet was loaded.
+
+--> "PORT" (no GUI equivalent)
+
+    Value: TCP port number on the VNC server.
+    Default: none.
+
+    This parameter is required in all cases. Note that this port is not the
+    one used for HTTP connection from the browser, it is the port used for
+    RFB connection. Usually, VNC servers use ports 58xx for HTTP connections,
+    and ports 59xx for RFB connections. Thus, most likely, this parameter
+    should be set to something like 5900, 5901 etc.
+
+--> "PASSWORD"
+
+    Value: session password in plan text.
+    Default: none, ask user.
+
+    DO NOT EVER USE THIS PARAMETER, unless you really know what you are
+    doing. It's extremely dangerous from the security point of view. When
+    this parameter is set, the viewer won't ever ask for a password.
+
+--> "ENCPASSWORD"
+
+    Value: encrypted session password in hex-ascii.
+    Default: none, ask user.
+
+    The same as the "PASSWORD" parameter but DES-encrypted using a fixed key.
+    Its value should be represented in hex-ascii e.g. "494015f9a35e8b22".
+    This parameter has higher priority over the "PASSWORD" parameter. DO NOT
+    EVER USE THIS PARAMETER, unless you really know what you are doing. It's
+    extremely dangerous from the security point of view, and encryption does
+    not actually help here since the decryption key is always known.
+
+--> "Encoding"
+
+    Values: "Raw", "RRE", "CoRRE", "Hextile", "Zlib", "Tight".
+    Default: "Tight".
+
+    The preferred encoding. "Hextile" is a good choice for fast networks,
+    while "Tight" is better suited for low-bandwidth connections. From the
+    other side, the "Tight" decoder in TightVNC Java viewer seems to be more
+    efficient than "Hextile" decoder so it's possible that this default
+    setting can be ok for fast networks too.
+
+--> "Compression level"
+
+    Values: "Default", "1", "2", "3", "4", "5", "6", "7", "8", "9".
+    Default: "Default". ;-)
+
+    Use specified compression level for "Tight" and "Zlib" encodings. Level 1
+    uses minimum of CPU time on the server but achieves weak compression
+    ratios. Level 9 offers best compression but may be slow in terms of CPU
+    time consumption on the server side. Use high levels with very slow
+    network connections, and low levels when working over higher-speed
+    networks. The "Default" value means that the server's default compression
+    level should be used.
+
+--> "JPEG image quality"
+
+    Values: "JPEG off", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9".
+    Default: "6".
+
+    Use the specified image quality level in "Tight" encoding. Quality level
+    0 denotes bad image quality but very impressive compression ratios, while
+    level 9 offers very good image quality at lower compression ratios. If
+    the value is "JPEG off", the server will not use lossy JPEG compression
+    in "Tight" encoding.
+
+--> "Cursor shape updates"
+
+    Values: "Enable", "Ignore", "Disable".
+    Default: "Enable".
+
+    Cursor shape updates is a protocol extension used to handle remote cursor
+    movements locally on the client side, saving bandwidth and eliminating
+    delays in mouse pointer movement. Note that current implementation of
+    cursor shape updates does not allow a client to track mouse cursor
+    position at the server side. This means that clients would not see mouse
+    cursor movements if mouse was moved either locally on the server, or by
+    another remote VNC client. Set this parameter to "Disable" if you always
+    want to see real cursor position on the remote side. Setting this option
+    to "Ignore" is similar to "Enable" but the remote cursor will not be
+    visible at all. This can be a reasonable setting if you don't care about
+    cursor shape and don't want to see two mouse cursors, one above another.
+
+--> "Use CopyRect"
+
+    Values: "Yes", "No".
+    Default: "Yes".
+
+    The "CopyRect" encoding saves bandwidth and drawing time when parts of
+    the remote screen are moving around. Most likely, you don't want to
+    change this setting.
+
+--> "Restricted colors"
+
+    Values: "Yes", "No".
+    Default: "No".
+
+    If set to "No", then 24-bit color format is used to represent pixel data. 
+    If set to "Yes", then only 8 bits are used to represent each pixel. 8-bit
+    color format can save bandwidth, but colors may look very inaccurate.
+
+--> "Mouse buttons 2 and 3"
+
+    Values: "Normal", "Reversed".
+    Default: "Normal".
+
+    If set to "Reversed", then right mouse button (button 2) will act as it
+    was middle mouse button (button 3), and vice versa.
+
+--> "View only"
+
+    Values: "Yes", "No".
+    Default: "No".
+
+    If set to "Yes", then all keyboard and mouse events in the desktop window
+    will be silently ignored and will not be passed to the remote side.
+
+--> "Share desktop"
+
+    Values: "Yes", "No".
+    Default: "Yes".
+
+    Share the connection with other clients on the same VNC server. The exact
+    behaviour in each case depends on the server configuration.
+
+--> "Open new window" (no GUI equivalent, applicable only in the applet mode)
+
+    Values: "Yes", "No".
+    Default: "No".
+
+    Operate in a separate window. This makes possible resizing the desktop,
+    and adds scroll bars when necessary. If the server supports variable
+    desktop size, the window will resize automatically when remote desktop
+    size changes.
+
+--> "Show controls" (no GUI equivalent)
+
+    Values: "Yes", "No".
+    Default: "Yes".
+
+    Set to "No" if you want to get rid of that button panel at the top.
+
+--> "Offer relogin" (no GUI equivalent, not applicable in the applet mode)
+
+    Values: "Yes", "No".
+    Default: "Yes".
+
+    If set to "No", the buttons "Login again" and "Close window" won't be
+    shown on disconnects or after an error has occured.
+
+--> "Show offline desktop" (no GUI equivalent)
+
+    Values: "Yes", "No".
+    Default: "No".
+
+    If set to "Yes", the viewer would continue to display desktop even
+    if the remote side has closed the connection. In this case, if the
+    button panel is enabled, then the "Disconnect" button would be
+    changed to "Hide desktop" after the connection is lost.
+
+--> "Defer screen updates" (no GUI equivalent)
+
+    Value: time in milliseconds.
+    Default: "20".
+
+    When updating the desktop contents after receiving an update from server,
+    schedule repaint within the specified number of milliseconds. Small delay
+    helps to coalesce several small updates into one drawing operation,
+    improving CPU usage. Set this parameter to 0 to disable deferred updates.
+
+--> "Defer cursor updates" (no GUI equivalent)
+
+    Value: time in milliseconds.
+    Default: "10".
+
+    When updating the desktop after moving the mouse, schedule repaint within
+    the specified number of milliseconds. This setting makes sense only when
+    "Cursor shape updates" parameter is set to "Enable". Small delay helps to
+    coalesce several small updates into one drawing operation, improving CPU
+    usage. Set this parameter to 0 to disable deferred cursor updates.
+
+--> "Defer update requests" (no GUI equivalent)
+
+    Value: time in milliseconds.
+    Default: "50".
+
+    After processing an update received from server, wait for the specified
+    number of milliseconds before requesting next screen update. Such delay
+    will end immediately on every mouse or keyboard event if not in the "view
+    only" mode. Small delay helps the server to coalesce several small
+    updates into one framebuffer update, improving both bandwidth and CPU
+    usage. Increasing the parameter value does not affect responsiveness on
+    mouse and keyboard events, but causes delays in updating the screen when
+    there is no mouse and keyboard activity on the client side.
+
+--> "SocketFactory" (no GUI equivalent)
+
+    Value: name of the class.
+    Default: none.
+
+    This option provides the way to define an alternate I/O implementation.
+    The dynamically referenced class must implement a SocketFactory
+    interface, and create a Socket, as configured by this parameter. See the
+    source in the SocketFactory.class.
+
+
+RECORDING VNC SESSIONS
+======================
+
+Current version of the TightVNC Java viewer is able to record VNC (RFB)
+sessions in files for later playback. The data format in saved session files
+is compatible with the rfbproxy program written by Tim Waugh. Most important
+thing about session recording is that it's supported only if Java security
+manager allows access to local filesystem. Typically, it would not work for
+unsigned applets. To use this feature, either use TightVNC Java viewer as a
+standalone application (Java Runtime Environment or Java Development Kit
+should be installed), or as a signed applet. The code checks if it's possible
+to support session recording, and if everything's fine, the new "Record"
+button should appear in the button panel. Pressing this button opens new
+window which controls session recording. The GUI is pretty self-explained.
+
+Other important facts about session recording:
+
+--> All sessions are recorded in the 24-bit color format. If you use
+    restricted colors (8-bit format), it will be temporarly switched to
+    24-bit mode during session recording.
+
+--> All sessions are recorded with cursor shape updates turned off. This is
+    necessary to represent remote cursor movements in recorded sessions.
+
+--> Closing and re-opening the recording control window does not affect the
+    recording. It's not necessary to keep that window open during recording a
+    session.
+
+--> Avoid using Zlib encoding when recording sessions. It's ok if you started
+    recording BEFORE the connection to the VNC server has been established,
+    but if you started recording during an active session, all Zlib sessions
+    will be saved Raw-encoded (that is, without compression at all). Zlib
+    decoding depends on the pixel data received earlier, thus saving the data
+    received from the server at an arbitrary moment is not sufficient to
+    decompress it correctly. And there is no way to say Zlib decoder to reset
+    decompressor's state -- that's a limitation of the Zlib encoder. The
+    viewer could re-compress raw pixel data again before saving Zlib-encoded
+    sessions, but unfortunately Java API does not allow to flush zlib data
+    streams making it impossible to save Zlib-encoded RFB pixel data without
+    using native code.
+
+--> Usually, Tight encoding is the most suitable one for session recording,
+    but some of the issues described above for the Zlib encoding affect the
+    Tight encoding as well. Unlike Zlib sessions, Tight-encoded sessions are
+    always saved Tight-encoded, but the viewer has to re-compress parts of
+    data to synchronize encoder's and decoder's zlib streams. And, due to
+    Java zlib API limitations, zlib streams' states have to be reset on each
+    compressed rectangle, causing compression ratios to be lower than in the
+    original VNC session. If you want to achieve the best possible
+    performance, turn recording on BEFORE connecting to the VNC server,
+    otherwise CPU usage and compression ratios may be notably less efficient.
+
+
+HINTS
+=====
+
+--> To refresh remote desktop in the view-only mode, press "r" or "R"
+    on the keyboard.
+
+
+ACKNOWLEDGEMENTS
+================
+
+This distribution contains Java DES software by Dave Zimmerman
+<dzimm@widget.com> and Jef Poskanzer <jef@acme.com>.  This is:
+
+    Copyright (c) 1996 Widget Workshop, Inc. All Rights Reserved.
+
+    Permission to use, copy, modify, and distribute this software and its
+    documentation for NON-COMMERCIAL or COMMERCIAL purposes and without fee
+    is hereby granted, provided that this copyright notice is kept intact.
+    
+    WIDGET WORKSHOP MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE
+    SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT
+    NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
+    PARTICULAR PURPOSE, OR NON-INFRINGEMENT. WIDGET WORKSHOP SHALL NOT BE
+    LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING,
+    MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.
+    
+    THIS SOFTWARE IS NOT DESIGNED OR INTENDED FOR USE OR RESALE AS ON-LINE
+    CONTROL EQUIPMENT IN HAZARDOUS ENVIRONMENTS REQUIRING FAIL-SAFE
+    PERFORMANCE, SUCH AS IN THE OPERATION OF NUCLEAR FACILITIES, AIRCRAFT
+    NAVIGATION OR COMMUNICATION SYSTEMS, AIR TRAFFIC CONTROL, DIRECT LIFE
+    SUPPORT MACHINES, OR WEAPONS SYSTEMS, IN WHICH THE FAILURE OF THE
+    SOFTWARE COULD LEAD DIRECTLY TO DEATH, PERSONAL INJURY, OR SEVERE
+    PHYSICAL OR ENVIRONMENTAL DAMAGE ("HIGH RISK ACTIVITIES").  WIDGET
+    WORKSHOP SPECIFICALLY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTY OF
+    FITNESS FOR HIGH RISK ACTIVITIES.
+
+    Copyright (C) 1996 by Jef Poskanzer <jef@acme.com>.  All rights
+    reserved.
+
+    Redistribution and use in source and binary forms, with or without
+    modification, are permitted provided that the following conditions
+    are met:
+    1. Redistributions of source code must retain the above copyright
+       notice, this list of conditions and the following disclaimer.
+    2. Redistributions in binary form must reproduce the above copyright
+       notice, this list of conditions and the following disclaimer in the
+       documentation and/or other materials provided with the distribution.
+
+    THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
+    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+    PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS
+    BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
+    BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
+    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
+    OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
+    ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+    Visit the ACME Labs Java page for up-to-date versions of this and other
+    fine Java utilities: http://www.acme.com/java/
diff -urN ./overlay_empty/net-misc/tightvnc/files/server-CVE-2007-1003.patch ./overlay/net-misc/tightvnc/files/server-CVE-2007-1003.patch
--- ./overlay_empty/net-misc/tightvnc/files/server-CVE-2007-1003.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/server-CVE-2007-1003.patch	2017-10-16 18:42:46.874881848 -0700
@@ -0,0 +1,36 @@
+--- vnc_unixsrc/Xvnc/programs/Xserver/Xext/xcmisc.c.cve-2007-1003	2000-06-11 06:00:51.000000000 -0600
++++ vnc_unixsrc/Xvnc/programs/Xserver/Xext/xcmisc.c	2007-03-22 07:07:34.000000000 -0600
+@@ -41,6 +41,12 @@ from the X Consortium.
+ #include "swaprep.h"
+ #include "xcmiscstr.h"
+ 
++#if HAVE_STDINT_H
++#include <stdint.h>
++#elif !defined(UINT32_MAX)
++#define UINT32_MAX 0xffffffffU
++#endif
++
+ static unsigned char XCMiscCode;
+ 
+ static void XCMiscResetProc(
+@@ -135,7 +141,10 @@ ProcXCMiscGetXIDList(client)
+ 
+     REQUEST_SIZE_MATCH(xXCMiscGetXIDListReq);
+ 
+-    pids = (XID *)ALLOCATE_LOCAL(stuff->count * sizeof(XID));
++    if (stuff->count > UINT32_MAX / sizeof(XID))
++	    return BadAlloc;
++
++    pids = (XID *)Xalloc(stuff->count * sizeof(XID));
+     if (!pids)
+     {
+ 	return BadAlloc;
+@@ -156,7 +165,7 @@ ProcXCMiscGetXIDList(client)
+     	client->pSwapReplyFunc = (ReplySwapPtr) Swap32Write;
+ 	WriteSwappedDataToClient(client, count * sizeof(XID), pids);
+     }
+-    DEALLOCATE_LOCAL(pids);
++    Xfree(pids);
+     return(client->noClientException);
+ }
+ 
diff -urN ./overlay_empty/net-misc/tightvnc/files/server-CVE-2007-1351-1352.patch ./overlay/net-misc/tightvnc/files/server-CVE-2007-1351-1352.patch
--- ./overlay_empty/net-misc/tightvnc/files/server-CVE-2007-1351-1352.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/server-CVE-2007-1351-1352.patch	2017-10-16 18:42:46.874881848 -0700
@@ -0,0 +1,49 @@
+--- vnc_unixsrc/Xvnc/lib/font/fontfile/fontdir.c.cve-2007-1351-1352	2000-06-11 06:00:53.000000000 -0600
++++ vnc_unixsrc/Xvnc/lib/font/fontfile/fontdir.c	2007-03-28 16:08:03.000000000 -0600
+@@ -35,11 +35,19 @@ in this Software without prior written a
+ #include    "fntfilst.h"
+ #include    <X11/keysym.h>
+ 
++#if HAVE_STDINT_H
++#include <stdint.h>
++#elif !defined(INT32_MAX)
++#define INT32_MAX 0x7fffffff
++#endif
++	
+ Bool
+ FontFileInitTable (table, size)
+     FontTablePtr    table;
+     int		    size;
+ {
++    if (size < 0 || (size > INT32_MAX/sizeof(FontEntryRec)))
++	return FALSE;
+     if (size)
+     {
+ 	table->entries = (FontEntryPtr) xalloc(sizeof(FontEntryRec) * size);
+--- vnc_unixsrc/Xvnc/lib/font/bitmap/bdfread.c.cve-2007-1351-1352	2000-06-11 06:00:52.000000000 -0600
++++ vnc_unixsrc/Xvnc/lib/font/bitmap/bdfread.c	2007-03-28 16:06:06.000000000 -0600
+@@ -59,6 +59,12 @@ from the X Consortium.
+ #include "bitmap.h"
+ #include "bdfint.h"
+ 
++#if HAVE_STDINT_H
++#include <stdint.h>
++#elif !defined(INT32_MAX)
++#define INT32_MAX 0x7fffffff
++#endif
++
+ #define INDICES 256
+ #define MAXENCODING 0xFFFF
+ #define BDFLINELEN  1024
+@@ -271,6 +277,11 @@ bdfReadCharacters(file, pFont, pState, b
+ 	bdfError("invalid number of CHARS in BDF file\n");
+ 	return (FALSE);
+     }
++    if (nchars > INT32_MAX / sizeof(CharInfoRec)) {
++	bdfError("Couldn't allocate pCI (%d*%d)\n", nchars,
++		 sizeof(CharInfoRec));
++	goto BAILOUT;
++    }
+     ci = (CharInfoPtr) xalloc(nchars * sizeof(CharInfoRec));
+     if (!ci) {
+ 	bdfError("Couldn't allocate pCI (%d*%d)\n", nchars,
diff -urN ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.10-aarch64.patch ./overlay/net-misc/tightvnc/files/tightvnc-1.3.10-aarch64.patch
--- ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.10-aarch64.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/tightvnc-1.3.10-aarch64.patch	2017-10-16 18:42:46.874881848 -0700
@@ -0,0 +1,39 @@
+Description: Add aarch64 (arm64) support
+Author: Colin Watson <cjwatson@ubuntu.com>
+Forwarded: no
+Last-Update: 2014-03-18
+
+Index: b/Xvnc/config/cf/Imake.cf
+===================================================================
+--- a/Xvnc/config/cf/Imake.cf
++++ b/Xvnc/config/cf/Imake.cf
+@@ -700,6 +700,10 @@
+ #   define s390Architecture
+ #  undef __s390__
+ # endif /* s390 */
++# ifdef __aarch64__
++#  define AArch64Architecture
++#  undef __aarch64__
++# endif /* __arch64__ */
+ # ifdef __alpha
+ #  define AlphaArchitecture
+ #  undef __alpha
+Index: b/Xvnc/config/cf/linux.cf
+===================================================================
+--- a/Xvnc/config/cf/linux.cf
++++ b/Xvnc/config/cf/linux.cf
+@@ -305,6 +305,14 @@
+ #define ServerExtraDefines	-DGCCUSESGAS XFree86ServerDefines
+ #endif /* PowerPCArchitecture */
+ 
++#ifdef AArch64Architecture
++#define DefaultCCOptions	-fsigned-char
++#define OptimizedCDebugFlags	-O2
++#define LinuxMachineDefines	-D__aarch64__
++#define ServerOSDefines		XFree86ServerOSDefines -DDDXTIME -DPART_NET
++#define ServerExtraDefines	-DGCCUSESGAS XFree86ServerDefines -D_XSERVER64
++#endif /* AArch64Architecture */
++
+ #ifdef ArmArchitecture
+ #define DefaultCCOptions	-fsigned-char
+ #define OptimizedCDebugFlags	-O2
diff -urN ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.10-java-build.patch ./overlay/net-misc/tightvnc/files/tightvnc-1.3.10-java-build.patch
--- ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.10-java-build.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/tightvnc-1.3.10-java-build.patch	2017-10-16 18:42:46.874881848 -0700
@@ -0,0 +1,20 @@
+diff -ur vnc_javasrc.orig/Makefile vnc_javasrc/Makefile
+--- vnc_javasrc.orig/Makefile	2009-03-07 14:15:55.000000000 +0100
++++ vnc_javasrc/Makefile	2009-03-07 14:16:22.000000000 +0100
+@@ -4,7 +4,6 @@
+ 
+ CP = cp
+ JC = javac
+-JCFLAGS = -target 1.1 -source 1.2
+ JAR = jar
+ ARCHIVE = VncViewer.jar
+ MANIFEST = MANIFEST.MF
+@@ -32,7 +31,7 @@
+ all: $(CLASSES) $(ARCHIVE)
+ 
+ $(CLASSES): $(SOURCES)
+-	$(JC) $(JCFLAGS) -O $(SOURCES)
++	$(JC) $(JAVACFLAGS) -O $(SOURCES)
+ 
+ $(ARCHIVE): $(CLASSES) $(MANIFEST)
+ 	$(JAR) cfm $(ARCHIVE) $(MANIFEST) $(CLASSES)
diff -urN ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.10-more-arm64-fixes.patch ./overlay/net-misc/tightvnc/files/tightvnc-1.3.10-more-arm64-fixes.patch
--- ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.10-more-arm64-fixes.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/tightvnc-1.3.10-more-arm64-fixes.patch	2017-10-16 18:42:46.874881848 -0700
@@ -0,0 +1,51 @@
+Description: more arm64 fixes
+Origin: https://bugs.debian.org/cgi-bin/bugreport.cgi?msg=37;bug=769364;filename=debian_arm64.patch;att=1
+Bug-Debian: http://bugs.debian.org/769364
+Bug-Ubuntu: http://bugs.launchpad.net/bugs/1429198
+Author: Riku Voipio <riku.voipio@linaro.org>
+Last-Update: 2016-03-23
+
+Index: tightvnc-1.3.9/Xvnc/include/Xmd.h
+===================================================================
+--- tightvnc-1.3.9.orig/Xvnc/include/Xmd.h
++++ tightvnc-1.3.9/Xvnc/include/Xmd.h
+@@ -59,7 +59,7 @@ SOFTWARE.
+ #ifdef CRAY
+ #define WORD64				/* 64-bit architecture */
+ #endif
+-#if defined(__alpha) || defined(__alpha__) || defined(__x86_64__) || defined(__powerpc64__)
++#if defined(__alpha) || defined(__alpha__) || defined(__x86_64__) || defined(__powerpc64__) || defined(__aarch64__)
+ #define LONG64				/* 32/64-bit architecture */
+ #endif
+ #ifdef __sgi
+Index: tightvnc-1.3.9/Xvnc/programs/Xserver/include/servermd.h
+===================================================================
+--- tightvnc-1.3.9.orig/Xvnc/programs/Xserver/include/servermd.h
++++ tightvnc-1.3.9/Xvnc/programs/Xserver/include/servermd.h
+@@ -405,6 +405,26 @@ SOFTWARE.
+ 
+ #endif /* linux/m68k */
+ 
++#if defined (linux) && defined(__aarch64__)
++#  define BITMAP_SCANLINE_UNIT			64
++# define BITMAP_SCANLINE_PAD 			64
++# define LOG2_BITMAP_PAD			6
++# define LOG2_BYTES_PER_SCANLINE_PAD		3
++
++/* Add for handling protocol XPutImage and XGetImage; see comment in
++ * Alpha section.
++ */
++#define INTERNAL_VS_EXTERNAL_PADDING
++#define BITMAP_SCANLINE_UNIT_PROTO		32
++
++#define BITMAP_SCANLINE_PAD_PROTO 	 	32
++#define LOG2_BITMAP_PAD_PROTO			5
++#define LOG2_BYTES_PER_SCANLINE_PAD_PROTO	2
++#define GLYPHPADBYTES          4
++#define GETLEFTBITS_ALIGNMENT  1
++
++#endif /* linux/aarch64 */
++
+ #if defined (linux) && defined(__powerpc__)
+ 
+ #ifdef __powerpc64__
diff -urN ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.10-pathfixes.patch ./overlay/net-misc/tightvnc/files/tightvnc-1.3.10-pathfixes.patch
--- ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.10-pathfixes.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/tightvnc-1.3.10-pathfixes.patch	2017-10-16 18:42:46.874881848 -0700
@@ -0,0 +1,16 @@
+--- vncserver.orig	2009-03-06 17:33:16.000000000 +0100
++++ vncserver	2009-03-06 17:35:39.000000000 +0100
+@@ -32,10 +32,11 @@
+ $geometry = "1024x768";
+ $depth = 24;
+ $desktopName = "X";
+-$vncClasses = "/usr/local/vnc/classes";
++$vncClasses = "/usr/share/tightvnc/classes";
+ $vncUserDir = "$ENV{HOME}/.vnc";
+-$fontPath = "unix/:7100";
++$fontPath = "/usr/share/fonts/misc/,/usr/share/fonts/Type1/";
+ $authType = "-rfbauth $vncUserDir/passwd";
++$colorPath = "/usr/share/X11/rgb";
+ 
+ # Read configuration from the system-wide and user files if present.
+ 
diff -urN ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.10-ppc64el-support.patch ./overlay/net-misc/tightvnc/files/tightvnc-1.3.10-ppc64el-support.patch
--- ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.10-ppc64el-support.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/tightvnc-1.3.10-ppc64el-support.patch	2017-10-16 18:42:46.874881848 -0700
@@ -0,0 +1,99 @@
+From 25adb1614419b72a986c229cb01870c1b3e38c0b Mon Sep 17 00:00:00 2001
+From: Lauri Kasanen <cand@gmx.com>
+Date: Fri, 5 Jun 2015 07:45:09 -0300
+Subject: [PATCH 2/2] Add ppc64el support
+
+Signed-off-by: Lauri Kasanen <cand@gmx.com>
+---
+ Xvnc/config/cf/Imake.cf                  |  4 ++++
+ Xvnc/config/cf/linux.cf                  |  8 +++++++-
+ Xvnc/include/Xmd.h                       |  2 +-
+ Xvnc/programs/Xserver/include/servermd.h | 23 +++++++++++++++++++++++
+ 4 files changed, 35 insertions(+), 2 deletions(-)
+
+diff --git a/Xvnc/config/cf/Imake.cf b/Xvnc/config/cf/Imake.cf
+index f1f6724..cbe9ef3 100644
+--- a/Xvnc/config/cf/Imake.cf
++++ b/Xvnc/config/cf/Imake.cf
+@@ -720,6 +720,10 @@ XCOMM Keep cpp from replacing path elements containing i486/i586/i686
+ #  define Mc68020Architecture
+ #  undef mc68000
+ # endif /* mc68000 */
++# ifdef __powerpc64__
++#  define Ppc64Architecture
++#  undef __powerpc64__
++# endif
+ # ifdef powerpc
+ #  define PpcArchitecture
+ #  undef powerpc
+diff --git a/Xvnc/config/cf/linux.cf b/Xvnc/config/cf/linux.cf
+index c0e2586..e5f1f2f 100644
+--- a/Xvnc/config/cf/linux.cf
++++ b/Xvnc/config/cf/linux.cf
+@@ -289,7 +289,13 @@ XCOMM binutils:	(LinuxBinUtilsMajorVersion)
+ #define ServerExtraDefines	-DGCCUSESGAS XFree86ServerDefines
+ #endif /* s390xArchitecture */
+ 
+-#ifdef PowerPCArchitecture
++#ifdef Ppc64Architecture
++#define DefaultCCOptions        -fsigned-char
++#define OptimizedCDebugFlags	-O2
++#define LinuxMachineDefines 	-D__powerpc64__
++#define ServerOSDefines		XFree86ServerOSDefines -DDDXTIME -DPART_NET
++#define ServerExtraDefines	-DGCCUSESGAS XFree86ServerDefines -D_XSERVER64
++#elif defined(PowerPCArchitecture)
+ #define DefaultCCOptions        -fsigned-char
+ #define OptimizedCDebugFlags	-O2
+ #define LinuxMachineDefines 	-D__powerpc__
+diff --git a/Xvnc/include/Xmd.h b/Xvnc/include/Xmd.h
+index 3cf9db1..704d252 100644
+--- a/Xvnc/include/Xmd.h
++++ b/Xvnc/include/Xmd.h
+@@ -59,7 +59,7 @@ SOFTWARE.
+ #ifdef CRAY
+ #define WORD64				/* 64-bit architecture */
+ #endif
+-#if defined(__alpha) || defined(__alpha__) || defined(__x86_64__)
++#if defined(__alpha) || defined(__alpha__) || defined(__x86_64__) || defined(__powerpc64__)
+ #define LONG64				/* 32/64-bit architecture */
+ #endif
+ #ifdef __sgi
+diff --git a/Xvnc/programs/Xserver/include/servermd.h b/Xvnc/programs/Xserver/include/servermd.h
+index 5066c1d..cc9f485 100644
+--- a/Xvnc/programs/Xserver/include/servermd.h
++++ b/Xvnc/programs/Xserver/include/servermd.h
+@@ -407,8 +407,31 @@ SOFTWARE.
+ 
+ #if defined (linux) && defined(__powerpc__)
+ 
++#ifdef __powerpc64__
++#  define BITMAP_SCANLINE_UNIT			64
++# define BITMAP_SCANLINE_PAD 			64
++# define LOG2_BITMAP_PAD			6
++# define LOG2_BYTES_PER_SCANLINE_PAD		3
++
++/* Add for handling protocol XPutImage and XGetImage; see comment in
++ * Alpha section.
++ */
++#define INTERNAL_VS_EXTERNAL_PADDING
++#define BITMAP_SCANLINE_UNIT_PROTO		32
++
++#define BITMAP_SCANLINE_PAD_PROTO 	 	32
++#define LOG2_BITMAP_PAD_PROTO			5
++#define LOG2_BYTES_PER_SCANLINE_PAD_PROTO	2
++#endif /* linux/ppc64 */
++
++#if defined(__LITTLE_ENDIAN__)
++#define IMAGE_BYTE_ORDER       LSBFirst
++#define BITMAP_BIT_ORDER       LSBFirst
++#else
+ #define IMAGE_BYTE_ORDER       MSBFirst
+ #define BITMAP_BIT_ORDER       MSBFirst
++#endif
++
+ #define GLYPHPADBYTES          4
+ #define GETLEFTBITS_ALIGNMENT  1
+ 
+-- 
+2.1.4
+
diff -urN ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.8-darwin.patch ./overlay/net-misc/tightvnc/files/tightvnc-1.3.8-darwin.patch
--- ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.8-darwin.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/tightvnc-1.3.8-darwin.patch	2017-10-16 18:42:46.874881848 -0700
@@ -0,0 +1,24 @@
+--- vnc_unixsrc/Xvnc/config/cf/darwin.cf.orig	2005-11-05 16:42:53.000000000 +0100
++++ vnc_unixsrc/Xvnc/config/cf/darwin.cf	2005-11-05 16:46:52.000000000 +0100
+@@ -106,7 +106,6 @@
+ # endif
+ #endif
+ 
+-#define StandardDefines	-DCSRG_BASED
+ #define XawI18nDefines	-DUSE_XWCHAR_STRING -DUSE_XMBTOWC
+ 
+ 
+--- vnc_unixsrc/Xvnc/config/cf/vnclibs.def.orig	2005-11-05 17:11:41.000000000 +0100
++++ vnc_unixsrc/Xvnc/config/cf/vnclibs.def	2005-11-05 17:17:21.000000000 +0100
+@@ -11,7 +11,11 @@
+ /* Avoid linking with different libjpeg in /usr/shlib under Tru64. */
+ VNCSYSLIBS = /usr/local/lib/libjpeg.a /usr/local/lib/libz.a -lcrypt
+ #else
++# if HasLibCrypt == YES
+ VNCSYSLIBS = -L/usr/local/lib -ljpeg -lz -lcrypt
++# else
++VNCSYSLIBS = -L/usr/local/lib -ljpeg -lz
++# endif
+ #endif
+ 
+ VNCCPPFLAGS = -I$(TOP)/../include -I/usr/local/include
diff -urN ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.8-imake-tmpdir.patch ./overlay/net-misc/tightvnc/files/tightvnc-1.3.8-imake-tmpdir.patch
--- ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.8-imake-tmpdir.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/tightvnc-1.3.8-imake-tmpdir.patch	2017-10-16 18:42:46.874881848 -0700
@@ -0,0 +1,37 @@
+--- vnc_unixsrc/Xvnc/config/imake/imake.c.orig	2000-06-11 14:00:51.000000000 +0200
++++ vnc_unixsrc/Xvnc/config/imake/imake.c	2003-09-01 22:59:25.000000000 +0200
+@@ -913,12 +913,25 @@
+ static void get_libc_version(inFile)
+   FILE* inFile;
+ {
+-  char *aout = tmpnam (NULL);
++  char aout[PATH_MAX];
+   FILE *fp;
+   const char *format = "%s -o %s -x c -";
+   char *cc;
+   int len;
+   char *command;
++  char *tmpdir;
++  int tmpfd;
++  
++  if((tmpdir = getenv("TMPDIR")) != NULL && strlen(tmpdir) < (PATH_MAX-13))
++    strcpy(aout, tmpdir);
++  else
++    strcpy(aout, "/tmp");
++  strcat(aout, "/imakeXXXXXX");
++  
++  if((tmpfd = mkstemp(aout)) == -1) {
++    perror("mkstemp");
++    abort();
++  }
+ 
+   cc = getenv ("CC");
+   if (cc == NULL)
+@@ -930,6 +943,7 @@
+   if (snprintf (command , len, format, cc, aout) == len)
+     abort ();
+ 
++  close(tmpfd);
+   fp = popen (command, "w");
+   if (fp == NULL || fprintf (fp, "%s\n", libc_c) < 0
+       || pclose (fp) != 0)
diff -urN ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.8-mips.patch ./overlay/net-misc/tightvnc/files/tightvnc-1.3.8-mips.patch
--- ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.8-mips.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/tightvnc-1.3.8-mips.patch	2017-10-16 18:42:46.874881848 -0700
@@ -0,0 +1,89 @@
+diff -cr vnc_unixsrc.orig/Xvnc/config/cf/linux.cf vnc_unixsrc/Xvnc/config/cf/linux.cf
+*** vnc_unixsrc.orig/Xvnc/config/cf/linux.cf	Wed Mar 20 02:49:23 2002
+--- vnc_unixsrc/Xvnc/config/cf/linux.cf	Sat Nov  4 19:01:06 2006
+***************
+*** 43,49 ****
+  #if defined(AlphaArchitecture) || defined(PowerPCArchitecture) || \
+      defined(SparcArchitecture) || defined(ArmArchitecure) || \
+      defined(i386Architecture) || defined(s390Architecture) || \
+!     defined(s390xArchitecture)
+  #define DefaultLinuxCLibMajorVersion	6
+  #else
+  #define DefaultLinuxCLibMajorVersion	5
+--- 43,49 ----
+  #if defined(AlphaArchitecture) || defined(PowerPCArchitecture) || \
+      defined(SparcArchitecture) || defined(ArmArchitecure) || \
+      defined(i386Architecture) || defined(s390Architecture) || \
+!     defined(s390xArchitecture) || defined(MipsArchitecture)
+  #define DefaultLinuxCLibMajorVersion	6
+  #else
+  #define DefaultLinuxCLibMajorVersion	5
+***************
+*** 261,266 ****
+--- 261,273 ----
+  #define ServerExtraDefines	-DGCCUSESGAS XFree86ServerDefines -D_XSERVER64
+  #endif /* AlphaArchitecture */
+  
++ #ifdef MipsArchitecture
++ #define OptimizedCDebugFlags	-O2
++ #define LinuxMachineDefines	-D__mips__
++ #define ServerOSDefines		XFree86ServerOSDefines -DDDXTIME -DPART_NET
++ #define ServerExtraDefines	-DGCCUSESGAS XFree86ServerDefines
++ #endif /* MipsArchitecture */
++ 
+  #ifdef Mc68020Architecture
+  #define OptimizedCDebugFlags	-O2
+  #define LinuxMachineDefines 	-D__mc68000__
+diff -cr vnc_unixsrc.orig/Xvnc/programs/Xserver/cfb/Imakefile vnc_unixsrc/Xvnc/programs/Xserver/cfb/Imakefile
+*** vnc_unixsrc.orig/Xvnc/programs/Xserver/cfb/Imakefile	Tue Mar 19 21:16:03 2002
+--- vnc_unixsrc/Xvnc/programs/Xserver/cfb/Imakefile	Sat Nov  4 19:01:49 2006
+***************
+*** 10,24 ****
+  /* cfb8cppl.c MUST come last to avoid confusing makedepend */
+  PSZSRCS = cfb8bit.c cfbteblt8.c cfbglrop8.c cfbpush8.c cfbrctstp8.c cfb8cppl.c
+  PSZOBJS = cfb8bit.o cfbteblt8.o cfbglrop8.o cfbpush8.o cfbrctstp8.o cfb8cppl.o
+- #ifdef MipsArchitecture
+- #ifndef ArcArchitecture
+- #ifndef Mips64Architecture
+- STIPPLESRC = stipmips.s stipmipste.s
+- STIPPLEOBJ = stipmips.o stipmipste.o
+- STIPPLEDEF = -DHAS_STIPPLE_CODE
+- #endif
+- #endif
+- #endif
+  #ifdef SparcArchitecture
+  STIPPLESRC = stipsparc.s stipsparcte.s
+  STIPPLEOBJ = stipsparc.o stipsparcte.o
+--- 10,15 ----
+***************
+*** 128,136 ****
+  LinkSourceFile(cfbpush8.c,LinkDirectory)
+  LinkSourceFile(cfbrctstp8.c,LinkDirectory)
+  LinkSourceFile(cfbteblt8.c,LinkDirectory)
+- #ifdef MipsArchitecture
+- LinkSourceFile(stipmips.s,LinkDirectory)
+- #endif
+  #ifdef SparcArchitecture
+  LinkSourceFile(stipsparc.s,LinkDirectory)
+  #endif
+--- 119,124 ----
+***************
+*** 186,202 ****
+  #if PixelSize == 8
+  ObjectFromSpecialSource(cfbglrop8,cfbglblt8,-DGLYPHROP)
+  
+- #ifdef MipsArchitecture
+- stipmipste.s: stipmips.s
+- 	$(RM) $@
+- 	$(LN) stipmips.s stipmipste.s
+- clean::
+- 	$(RM) stipmipste.s
+- 
+- stipmipste.o: stipmipste.s
+- 	$(AS) -o $@ -DTETEXT stipmipste.s
+- #endif
+- 
+  #ifdef SparcArchitecture
+  stipsparcte.s: stipsparc.s
+  	$(RM) $@
+--- 174,179 ----
diff -urN ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.8-pathfixes.patch ./overlay/net-misc/tightvnc/files/tightvnc-1.3.8-pathfixes.patch
--- ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.8-pathfixes.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/tightvnc-1.3.8-pathfixes.patch	2017-10-16 18:42:46.874881848 -0700
@@ -0,0 +1,23 @@
+--- vncserver.old	2006-08-10 13:01:07.000000000 +0200
++++ vncserver	2006-09-05 19:31:30.000000000 +0200
+@@ -36,16 +36,16 @@
+ $geometry = "1024x768";
+ $depth = 24;
+ $desktopName = "X";
+-$vncClasses = "/usr/local/vnc/classes";
++$vncClasses = "/usr/share/tightvnc/classes";
+ $vncUserDir = "$ENV{HOME}/.vnc";
+-$fontPath = "unix/:7100";
++$fontPath = "unix/:-1";
+ $authType = "-rfbauth $vncUserDir/passwd";
+ 
+ # Here is another example of setting the font path:
+-# $fontPath = "/usr/lib/X11/fonts/misc/,/usr/lib/X11/fonts/75dpi/";
++$fontPath = "/usr/share/fonts/misc/,/usr/share/fonts/Type1/";
+ 
+ # X colors database path is optional, uncomment and edit to use:
+-# $colorPath = "/usr/lib/X11/rgb";
++$colorPath = "/usr/share/X11/rgb";
+ 
+ # You might wish to make your vnc directory under /tmp, to make sure
+ # passwords are always kept on the local filesystem. To do that, just
diff -urN ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.9-java-build.patch ./overlay/net-misc/tightvnc/files/tightvnc-1.3.9-java-build.patch
--- ./overlay_empty/net-misc/tightvnc/files/tightvnc-1.3.9-java-build.patch	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/tightvnc-1.3.9-java-build.patch	2017-10-16 18:42:46.874881848 -0700
@@ -0,0 +1,19 @@
+--- vnc_javasrc/Makefile.bak	2008-09-11 21:17:37.000000000 +1200
++++ vnc_javasrc/Makefile	2008-09-11 21:18:30.000000000 +1200
+@@ -4,7 +4,6 @@
+ 
+ CP = cp
+ JC = javac
+-JCFLAGS = -target 1.1
+ JAR = jar
+ ARCHIVE = VncViewer.jar
+ MANIFEST = MANIFEST.MF
+@@ -32,7 +31,7 @@
+ all: $(CLASSES) $(ARCHIVE)
+ 
+ $(CLASSES): $(SOURCES)
+-	$(JC) $(JCFLAGS) -O $(SOURCES)
++	$(JC) $(JAVACFLAGS) -O $(SOURCES)
+ 
+ $(ARCHIVE): $(CLASSES) $(MANIFEST)
+ 	$(JAR) cfm $(ARCHIVE) $(MANIFEST) $(CLASSES)
diff -urN ./overlay_empty/net-misc/tightvnc/files/tightvnc.confd ./overlay/net-misc/tightvnc/files/tightvnc.confd
--- ./overlay_empty/net-misc/tightvnc/files/tightvnc.confd	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/tightvnc.confd	2017-10-16 18:42:46.874881848 -0700
@@ -0,0 +1,9 @@
+# Config file for /etc/init.d/vnc
+
+# Specify the user(s) Xvnc(1) should be run for. The syntax is: "username:display".
+# example: "DISPLAYS="foo:1 bar:2" You can specify more users separated by space.
+# DISPLAYS="myuser:1"
+
+# Specify any of vncserver(1) and Xvnc(1) options. See the respective man pages for more information.
+# VNC_OPTS=""
+
diff -urN ./overlay_empty/net-misc/tightvnc/files/tightvnc.initd ./overlay/net-misc/tightvnc/files/tightvnc.initd
--- ./overlay_empty/net-misc/tightvnc/files/tightvnc.initd	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/files/tightvnc.initd	2017-10-16 18:42:46.878881940 -0700
@@ -0,0 +1,57 @@
+#!/sbin/openrc-run
+# Copyright 1999-2004 Gentoo Foundation
+# Distributed under the terms of the GNU General Public License, v2 or later
+# $Id$
+
+depend() {
+	need net
+}
+
+checkconfig() {
+	if [ -n "${DISPLAYS}" ]; then
+		if [ $1 = "start" ]; then
+			local user
+			for user in $DISPLAYS; do
+				if eval [ ! -f "~${user%%:*}/.vnc/passwd" ]; then
+					eerror "There are no passwords defined for user ${user%%:*}."
+					return 1
+				elif [ -e "/tmp/.X11-unix/X${user##*:}" ]; then
+					eerror "Display :${user##*:} appears to be already in use because of /tmp/.X11-unix/X${user##*:}"
+					eerror "Remove this file if there is no X server $HOSTNAME:${user##*:}"
+					return 1
+				elif [ -e "/tmp/.X${user##*:}-lock" ]; then
+					eerror "Display :${user##*:} appears to be already in use because of /tmp/.X${user##*:}-lock"
+					eerror "Remove this file if there is no X server $HOSTNAME:${user##*:}"
+					return 1
+				fi
+			done
+		fi
+		return 0
+	else
+		eerror 'Please define $DISPLAYS in /etc/conf.d/vnc'
+		return 1
+	fi
+}
+
+start() {
+	checkconfig start || return 1
+	ebegin "Starting TightVNC server"
+	for user in $DISPLAYS; do
+		su -s /bin/sh ${user%%:*} -c "cd ~${user%%:*} && vncserver :${user##*:} $VNC_OPTS" &>/dev/null
+	done
+	eend $?
+}
+
+stop() {
+	checkconfig stop || return 2
+	ebegin "Stopping TightVNC server"
+	for user in $DISPLAYS; do
+		su -s /bin/sh ${user%%:*} -c "vncserver -kill :${user##*:}" &>/dev/null
+	done
+	eend $?
+}
+
+restart() {
+        svc_stop
+        svc_start
+}
diff -urN ./overlay_empty/net-misc/tightvnc/Manifest ./overlay/net-misc/tightvnc/Manifest
--- ./overlay_empty/net-misc/tightvnc/Manifest	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/Manifest	2017-10-16 18:42:46.870881756 -0700
@@ -0,0 +1,2 @@
+DIST tightvnc-1.3.10_javasrc.tar.gz 89641 SHA256 465a6c90d362029152ea16d0b8e2c29f772b06eeec6c561278390f73d64ec6ec SHA512 e33366b45f06b6522dce79e2f43bc4d7ffa00577f7a1a56026f9e869de7e61838093fdc7e9c4dace326652d9416c2267f6d211ac639095ffd1c4ba38dddb8851 WHIRLPOOL 8ba7a6545a105687989f469400d0d76d68e6a1f33462cf4aa725282d8c6c5ebd01a2c0f269dbd924a9272af81423321a85be8b24abf484962d990b21138d3451
+DIST tightvnc-1.3.10_unixsrc.tar.bz2 1780510 SHA256 f48c70fea08d03744ae18df6b1499976362f16934eda3275cead87baad585c0d SHA512 b5b3d5d532feffc07db2d48d3416e1a0d1b1b15bdb8ff801ed42042d4b99f34365e10e3b005bc15cc6e0a33c429db8976c227a1854e1af5e10bcb60e17a69b87 WHIRLPOOL 3ede45e5e480c93384d331f80beefac723925014cf29f94b4b12c3ce6d78daca38ff7f4279411db76c83dca0ab1733310b877836e55a5f2084e826dbabbe1d23
diff -urN ./overlay_empty/net-misc/tightvnc/metadata.xml ./overlay/net-misc/tightvnc/metadata.xml
--- ./overlay_empty/net-misc/tightvnc/metadata.xml	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/metadata.xml	2017-10-16 18:42:46.878881940 -0700
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
+<pkgmetadata>
+  <!-- maintainer-needed -->
+  <use>
+    <flag name="server">Build TightVNC server</flag>
+  </use>
+  <upstream>
+    <remote-id type="sourceforge">vnc-tight</remote-id>
+  </upstream>
+</pkgmetadata>
diff -urN ./overlay_empty/net-misc/tightvnc/tightvnc-1.3.10-r2.ebuild ./overlay/net-misc/tightvnc/tightvnc-1.3.10-r2.ebuild
--- ./overlay_empty/net-misc/tightvnc/tightvnc-1.3.10-r2.ebuild	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/tightvnc-1.3.10-r2.ebuild	2017-10-16 18:42:46.878881940 -0700
@@ -0,0 +1,130 @@
+# Copyright 1999-2014 Gentoo Foundation
+# Distributed under the terms of the GNU General Public License v2
+# $Id$
+
+EAPI="5"
+
+inherit eutils toolchain-funcs java-pkg-opt-2
+
+IUSE="java tcpd server"
+
+S="${WORKDIR}/vnc_unixsrc"
+DESCRIPTION="A great client/server software package allowing remote network access to graphical desktops"
+SRC_URI="mirror://sourceforge/vnc-tight/${P}_unixsrc.tar.bz2
+	java? ( mirror://sourceforge/vnc-tight/${P}_javasrc.tar.gz )"
+HOMEPAGE="http://www.tightvnc.com/"
+
+KEYWORDS="alpha amd64 arm ~mips ppc ~sh sparc x86 ~x86-fbsd ~arm-linux ~x86-linux"
+LICENSE="GPL-2"
+SLOT="0"
+
+CDEPEND="media-fonts/font-misc-misc
+	virtual/jpeg
+	server? (
+		media-fonts/font-cursor-misc
+		x11-apps/rgb
+		x11-apps/xauth
+		x11-apps/xsetroot
+	)
+	x11-libs/libX11
+	x11-libs/libXaw
+	x11-libs/libXmu
+	x11-libs/libXp
+	x11-libs/libXt
+	tcpd? ( >=sys-apps/tcp-wrappers-7.6-r2 )"
+RDEPEND="${CDEPEND}
+	java? ( >=virtual/jre-1.4 )"
+DEPEND="${CDEPEND}
+	java? ( >=virtual/jdk-1.4 )
+	x11-proto/xextproto
+	x11-proto/xproto
+	server? (
+		x11-proto/inputproto
+		x11-proto/kbproto
+		x11-proto/printproto
+	)
+	>=x11-misc/imake-1
+	x11-misc/gccmakedep
+	x11-misc/makedepend
+	!net-misc/tigervnc"
+
+pkg_setup() {
+	if ! use server;
+	then
+		echo
+		einfo "The 'server' USE flag will build tightvnc's server."
+		einfo "If '-server' is chosen only the client is built to save space."
+		einfo "Stop the build now if you need to add 'server' to USE flags.\n"
+	fi
+}
+
+src_prepare() {
+	epatch "${FILESDIR}/${PN}-1.3.10-pathfixes.patch" # fixes bug 78385 and 146099
+	epatch "${FILESDIR}/${PN}-1.3.8-imake-tmpdir.patch" # fixes bug 23483
+	epatch "${FILESDIR}/${PN}-1.3.8-darwin.patch" # fixes bug 89908
+	epatch "${FILESDIR}/${PN}-1.3.8-mips.patch"
+	epatch "${FILESDIR}"/server-CVE-2007-1003.patch
+	epatch "${FILESDIR}"/server-CVE-2007-1351-1352.patch
+	epatch "${FILESDIR}"/1.3.9-fbsd.patch
+	epatch "${FILESDIR}"/1.3.9-arm.patch
+	epatch "${FILESDIR}"/1.3.9-sh.patch
+	epatch "${FILESDIR}"/${PV}-sparc.patch
+	sed -e "s:\\(/etc/\\|/usr/share/\\):${EPREFIX}\\1:g" -i vncserver || die
+
+	if use java; then
+		cd "${WORKDIR}"
+		epatch "${FILESDIR}/${PN}-1.3.10-java-build.patch"
+	fi
+}
+
+src_compile() {
+	xmkmf -a || die "xmkmf failed"
+
+	emake -j1 CDEBUGFLAGS="${CFLAGS}" EXTRA_LDOPTIONS="${LDFLAGS}" World
+
+	if use server; then
+		cd Xvnc || die
+		econf
+
+		if use tcpd; then
+			local myextra="-lwrap"
+			emake -j1 EXTRA_LIBRARIES="${myextra}" \
+				CDEBUGFLAGS="${CFLAGS}" EXTRA_LDOPTIONS="${LDFLAGS}" \
+				EXTRA_DEFINES="-DUSE_LIBWRAP=1"
+		else
+			emake -j1 CDEBUGFLAGS="${CFLAGS}" EXTRA_LDOPTIONS="${LDFLAGS}"
+		fi
+	fi
+
+	if use java; then
+		cd "${WORKDIR}/vnc_javasrc" || die
+		emake -j1 JAVACFLAGS="$(java-pkg_javac-args)" all
+	fi
+
+}
+
+src_install() {
+	# the web based interface and the java viewer need the java class files
+	if use java; then
+		java-pkg_newjar "${WORKDIR}/vnc_javasrc/VncViewer.jar"
+		java-pkg_dolauncher "${PN}-java"
+		insinto /usr/share/${PN}/classes
+		doins "${WORKDIR}"/vnc_javasrc/*.vnc || die
+		dosym /usr/share/${PN}/lib/${PN}.jar /usr/share/${PN}/classes/VncViewer.jar
+	fi
+
+	dodir /usr/share/man/man1 /usr/bin
+	./vncinstall "${ED}"/usr/bin "${ED}"/usr/share/man || die "vncinstall failed"
+
+	if use server; then
+		newconfd "${FILESDIR}"/tightvnc.confd vnc
+		newinitd "${FILESDIR}"/tightvnc.initd vnc
+	else
+		rm -f "${ED}"/usr/bin/vncserver || die
+		rm -f "${ED}"/usr/share/man/man1/{Xvnc,vncserver}* || die
+	fi
+
+	dodoc ChangeLog README WhatsNew
+	use java && dodoc "${FILESDIR}"/README.JavaViewer
+	newdoc vncviewer/README README.vncviewer
+}
diff -urN ./overlay_empty/net-misc/tightvnc/tightvnc-1.3.10-r3.ebuild ./overlay/net-misc/tightvnc/tightvnc-1.3.10-r3.ebuild
--- ./overlay_empty/net-misc/tightvnc/tightvnc-1.3.10-r3.ebuild	1969-12-31 16:00:00.000000000 -0800
+++ ./overlay/net-misc/tightvnc/tightvnc-1.3.10-r3.ebuild	2017-10-16 18:42:46.878881940 -0700
@@ -0,0 +1,133 @@
+# Copyright 1999-2016 Gentoo Foundation
+# Distributed under the terms of the GNU General Public License v2
+# $Id$
+
+EAPI="5"
+
+inherit eutils toolchain-funcs java-pkg-opt-2
+
+IUSE="java tcpd server"
+
+S="${WORKDIR}/vnc_unixsrc"
+DESCRIPTION="A great client/server software package allowing remote network access to graphical desktops"
+SRC_URI="mirror://sourceforge/vnc-tight/${P}_unixsrc.tar.bz2
+	java? ( mirror://sourceforge/vnc-tight/${P}_javasrc.tar.gz )"
+HOMEPAGE="http://www.tightvnc.com/"
+
+KEYWORDS="~alpha ~amd64 ~arm ~arm64 ~mips ~ppc ~sh ~sparc ~x86 ~x86-fbsd ~arm-linux ~x86-linux"
+LICENSE="GPL-2"
+SLOT="0"
+
+CDEPEND="media-fonts/font-misc-misc
+	virtual/jpeg
+	server? (
+		media-fonts/font-cursor-misc
+		x11-apps/rgb
+		x11-apps/xauth
+		x11-apps/xsetroot
+	)
+	x11-libs/libX11
+	x11-libs/libXaw
+	x11-libs/libXmu
+	x11-libs/libXp
+	x11-libs/libXt
+	tcpd? ( >=sys-apps/tcp-wrappers-7.6-r2 )"
+RDEPEND="${CDEPEND}
+	java? ( >=virtual/jre-1.4 )"
+DEPEND="${CDEPEND}
+	java? ( >=virtual/jdk-1.4 )
+	x11-proto/xextproto
+	x11-proto/xproto
+	server? (
+		x11-proto/inputproto
+		x11-proto/kbproto
+		x11-proto/printproto
+	)
+	>=x11-misc/imake-1
+	x11-misc/gccmakedep
+	x11-misc/makedepend
+	!net-misc/tigervnc"
+
+pkg_setup() {
+	if ! use server;
+	then
+		echo
+		einfo "The 'server' USE flag will build tightvnc's server."
+		einfo "If '-server' is chosen only the client is built to save space."
+		einfo "Stop the build now if you need to add 'server' to USE flags.\n"
+	fi
+}
+
+src_prepare() {
+	epatch "${FILESDIR}/${PN}-1.3.10-pathfixes.patch" # fixes bug 78385 and 146099
+	epatch "${FILESDIR}/${PN}-1.3.8-imake-tmpdir.patch" # fixes bug 23483
+	epatch "${FILESDIR}/${PN}-1.3.8-darwin.patch" # fixes bug 89908
+	epatch "${FILESDIR}/${PN}-1.3.8-mips.patch"
+	epatch "${FILESDIR}"/server-CVE-2007-1003.patch
+	epatch "${FILESDIR}"/server-CVE-2007-1351-1352.patch
+	epatch "${FILESDIR}"/1.3.9-fbsd.patch
+	epatch "${FILESDIR}"/1.3.9-arm.patch
+	epatch "${FILESDIR}"/1.3.9-sh.patch
+	epatch "${FILESDIR}"/${P}-ppc64el-support.patch
+	epatch "${FILESDIR}"/${P}-aarch64.patch
+	epatch "${FILESDIR}"/${P}-more-arm64-fixes.patch
+
+	sed -e "s:\\(/etc/\\|/usr/share/\\):${EPREFIX}\\1:g" -i vncserver || die
+
+	if use java; then
+		cd "${WORKDIR}"
+		epatch "${FILESDIR}/${PN}-1.3.10-java-build.patch"
+	fi
+}
+
+src_compile() {
+	xmkmf -a || die "xmkmf failed"
+
+	emake -j1 CDEBUGFLAGS="${CFLAGS}" EXTRA_LDOPTIONS="${LDFLAGS}" World
+
+	if use server; then
+		cd Xvnc || die
+		econf
+
+		if use tcpd; then
+			local myextra="-lwrap"
+			emake -j1 EXTRA_LIBRARIES="${myextra}" \
+				CDEBUGFLAGS="${CFLAGS}" EXTRA_LDOPTIONS="${LDFLAGS}" \
+				EXTRA_DEFINES="-DUSE_LIBWRAP=1"
+		else
+			emake -j1 CDEBUGFLAGS="${CFLAGS}" EXTRA_LDOPTIONS="${LDFLAGS}"
+		fi
+	fi
+
+	if use java; then
+		cd "${WORKDIR}/vnc_javasrc" || die
+		emake -j1 JAVACFLAGS="$(java-pkg_javac-args)" all
+	fi
+
+}
+
+src_install() {
+	# the web based interface and the java viewer need the java class files
+	if use java; then
+		java-pkg_newjar "${WORKDIR}/vnc_javasrc/VncViewer.jar"
+		java-pkg_dolauncher "${PN}-java"
+		insinto /usr/share/${PN}/classes
+		doins "${WORKDIR}"/vnc_javasrc/*.vnc || die
+		dosym /usr/share/${PN}/lib/${PN}.jar /usr/share/${PN}/classes/VncViewer.jar
+	fi
+
+	dodir /usr/share/man/man1 /usr/bin
+	./vncinstall "${ED}"/usr/bin "${ED}"/usr/share/man || die "vncinstall failed"
+
+	if use server; then
+		newconfd "${FILESDIR}"/tightvnc.confd vnc
+		newinitd "${FILESDIR}"/tightvnc.initd vnc
+	else
+		rm -f "${ED}"/usr/bin/vncserver || die
+		rm -f "${ED}"/usr/share/man/man1/{Xvnc,vncserver}* || die
+	fi
+
+	dodoc ChangeLog README WhatsNew
+	use java && dodoc "${FILESDIR}"/README.JavaViewer
+	newdoc vncviewer/README README.vncviewer
+}
