#!/bin/false

function doit()
{
  (
    set -o xtrace
    set -o errexit
    set -o nounset
    set -o pipefail
    
    ( rm -f ./.config* ) || true
    function _() {
      for i in "$@"
      do
        echo "CONFIG_""$i" >>./.config.allconfig
      done
    }
    
    ALSO_QEMU=y
    _ KERNEL_XZ=y SWAP=y SYSVIPC=y CROSS_MEMORY_ATTACH=y FHANDLE=y KMEMRES=m BLK_DEV_INITRD=y CC_{OPTIMIZE_FOR_PERFORMANCE,STACKPROTECTOR_STRONG}=y SHMEM=y AIO=y ADVISE_SYSCALLS=y MEMBARRIER=y VM_EVENT_COUNTERS=y SLUB=y STRICT_{KERNEL,MODULE}_RWX=y
    _ IRQ_DOMAIN_DEBUG=y
    _ NO_HZ_IDLE=y NO_HZ=y HIGH_RES_TIMERS=y
    _ CGROUPS=y CGROUP_SCHED=y
    _ UID16=y MULTIUSER=y POSIX_TIMERS=y KALLSYMS=y PRINTK=y BUG=y ELF_CORE=y BASE_FULL=y FUTEX=y EPOLL=y SIGNALFD=y TIMERFD=y EVENTFD=y
    _ PERF_EVENTS=y
    _ MODULES=y MODULE_UNLOAD=y
    _ BLOCK=y LBDAF=y BLK_DEV_BSG=y BLK_DEBUG_FS=y
    _ PARTITION_ADVANCED=y {MSDOS,EFI}_PARTITION=y
    _ MMU=y MULTIPLATFORM=y VIRT=y ROCKCHIP=y ARM_THUMB{,EE}=y KUSER_HELPERS=y VDSO=y CACHE_L2X0=y ARM_KERNMEM_PERMS=y DEBUG_RODATA=y
    # errata go here
    _ ARM_ERRATA_643719=y
    # end errata
    _ ARCH_MULTI_V7=y ARCH_SUNXI=y MACH_SUN7I=y
    if [ "$ALSO_QEMU" == "y" ] || true # actually, disabling this causes problems on the real hardware. go figure.
    then
      _ ARCH_VEXPRESS=y
    fi
    _ SMP=y SMP_ON_UP=y ARM_CPU_TOPOLOGY=y HAVE_ARM_ARCH_TIMER=y VMSPLIT_2G=y NR_CPUS=8 HOTPLUG_CPU=y ARM_PSCI=y PREEMPT=y HZ_1000=y AEABI=y HIGHMEM=y HIGHPTE=y CPU_SW_DOMAIN_PAN=y HW_PERF_EVENTS=y COMPACTION=y BOUNCE=y FORCE_MAX_ZONEORDER=11 SECCOMP=y
    _ CPU_FREQ=y CPU_FREQ_STAT=y CPU_FREQ_DEFAULT_GOV_PERFORMANCE=y
    _ CPU_IDLE=y ARM_CPUIDLE=y
    _ VFP{,v3}=y {,KERNEL_MODE_}NEON=y
    _ BINFMT_{ELF,SCRIPT}=y CORE_DUMP_DEFAULT_ELF_HEADERS=y COREDUMP=y
    _ SUSPEND=y KEXEC=y # kexec requires suspend
    _ DEVTMPFS{,_MOUNT}=y STANDALONE=y PREVENT_FIRMWARE_BUILD=y ALLOW_DEV_COREDUMP=y
    _ BLK_DEV=y
    _ TTY=y VT{,_CONSOLE}=y UNIX98_PTYS=y DEVMEM=y
    _ IOMMU_SUPPORT=y ARM_SMMU=y IOMMU_IO_PAGETABLE_{LPAE,ARMV7S}=y
    _ PM_DEVFREQ=y
    _ {,MANDATORY_}FILE_LOCKING=y DNOTIFY=y INOTIFY_USER=y FANOTIFY=y
    _ PROC_FS=y PROC_SYSCTL=y PROC_PAGE_MONITOR=y PROC_CHILDREN=y SYSFS=y TMPFS{,_XATTR}=y
    _ MAGIC_SYSRQ=y MAGIC_SYSRQ_DEFAULT_ENABLE=0x1 STACKTRACE=y DEBUG_BUGVERBOSE=y ARM_UNWIND=y
    _ PRINTK_TIME=y
    _ ENABLE_{WARN_DEPRECATED,MUST_CHECK}=y DEBUG_FS=y
    _ SERIAL_8250{,_{CONSOLE,DMA,DW}}=y SERIAL_OF_PLATFORM=y
    if [ "$ALSO_QEMU" == "y" ]
    then
      _ SERIAL_AMBA_PL011{,_CONSOLE}=y
    fi
    _ REGULATOR=y
    _ DMADEVICES=y DMA_SUN4I=y
    if [ "$ALSO_QEMU" == "y" ]
    then
      _ CLK_SP810=y
      _ CLK_VEXPRESS_OSC=y
    fi
    _ ARM_ARCH_TIMER_EVTSTREAM=y
    _ MEMORY=y # needed?
    _ RESET_CONTROLLER=y
    _ LOCKUP_DETECTOR=y DETECT_HUNG_TASK=y
    
    # modules (generic)
    _ BLK_DEV_LOOP=m FLUSH_DATA_CACHE=m
    
    # modules (generic/devicemapper)
    _ MD=y
    _ BLK_DEV_MD=m MD_{LINEAR,RAID{0,1,10,456,},MULTIPATH,FAULTY}=m
    _ BLK_DEV_DM=m DM_{CRYPT,SNAPSHOT,THIN_PROVISIONING,MIRROR,RAID,ZERO,MULTIPATH{,_{QL,ST}},DELAY,FLAKEY,VERITY,SWITCH,INTEGRITY}=m DM_UEVENT=y DM_VERITY_FEC=y
    
    # modules (generic/filesystems)
    _ EXT2_FS=m EXT2_FS_XATTR=y
    _ EXT3_FS=m EXT4_FS=m EXT4_ENCRYPTION=y
    _ REISERFS_FS=m REISERFS_FS_XATTR=y
    _ JFS_FS=m
    _ XFS_FS=m XFS_RT=y
    _ GFS2_FS=m
    _ BTRFS_FS=m
    _ NILFS2_FS=m
    _ F2FS=m F2FS_FS_XATTR=y F2FS_CHECK_FS=y F2FS_FS_ENCRYPTION=y
    _ FUSE_FS=m CUSE=m
    _ OVERLAY_FS=m
    _ ISO9660_FS=m JOLIET=y ZISOFS=y
    _ UDF_FS=m
    _ MSDOS_FS=m
    _ VFAT_FS=m
    _ NTFS_FS=m NTFS_RW=y
    _ MISC_FILESYSTEMS=y
    _ ECRYPT_FS=m ECRYPT_FS_MESSAGING=y
    _ SQUASHFS=m SQUASHFS_FILE_DIRECT=y SQUASHFS_XATTR=y SQUASHFS_{ZLIB,LZ4,LZO,XZ}=y
    _ ROMFS_FS=m
    
    # modules (display)
    _ INPUT_EVDEV=m
    _ DRM=m DRM_FBDEV_EMULATION=y FRAMEBUFFER_CONSOLE=m
    _ FB=y FB_SIMPLE=y
    
    # modules (usb)
    _ I2C=y I2C_{CHARDEV,ALGOBIT,MV64XXX}=m
    _ MFD_AXP20X=y AXP20X_POWER=m
    _ USB_SUPPORT=y USB=m USB_DEFAULT_PERSIST=y USB_{EHCI,OHCI}_HCD{,_PLATFORM}=m USB_EHCI_TT_NEWSCHED=y USB_MUSB_HDRC=m USB_MUSB_HOST=y NOP_USB_XCEIV=m EXTCON=m PHY_SUN4I_USB=m USB_MUSB_SUNXI=m
    _ PHY_SUN9I_USB=m
    
    # modules (ethernet)
    _ ETHERNET=y NET_VENDOR_STMICRO=y STMMAC_ETH=m STMMAC_PLATFORM=m DWMAC_SUNXI=m REALTEK_PHY=m
    
    # modules (usb mass storage generic)
    _ SCSI=m BLK_DEV_{SD,SR}=m USB_STORAGE=m USB_UAS=m
    
    # modules (networking generic)
    _ NET=y LWTUNNEL=y LWTUNNEL_BPF=y NET_DEVLINK=m
    _ PACKET{,_DIAG}=m UNIX{,_DIAG}=m NET_KEY=m
    _ INET=y XFRM_USER=y NET_{IPIP,IPGRE_DEMUX,IPGRE}=m SYN_COOKIES=y NET_IPVTI=m NET_FOU=m NET_FOU_IP_TUNNELS=y INET_AH=m INET_ESP=m INET_IPCOMP=m INET_XFRM_MODE_{TRANSPORT,TUNNEL,BEET}=m INET_{,UDP_,RAW_}DIAG=m TCP_CONG_ADVANCED=y TCP_CONG_{BIC,CUBIC,WESTWOOD,HSTCP,HYBLA,VEGAS,NV,SCALABLE,LP,VENO,YEAH,ILLINOIS,DCTCP,CDG,BBR}=m TCP_MD5SIG=y IPV6=m INET6_AH=m INET6_ESP=m INET6_ESP_OFFLOAD=m INET6_IPCOMP=m IPV6_MIP6=m INET6_XFRM_MODE_{TRANSPORT,TUNNEL,BEET,ROUTEOPTIMIZATION}=m IPV6_VTI=m IPV6_SIT=m IPV6_SIT_6RD=y IPV6_GRE=m IPV6_MULTIPLE_TABLES=y IPV6_SUBTREES=y IPV6_MROUTE=y IPV6_MROUTE_MULTIPLE_TABLES=y IPV6_PIMSM_V2=y IPV6_SEG6_LWTUNNEL=y IPV6_SEG6_HMAC=y
    _ AF_KCM=m # backtrack (rxrpc/ceph should be left alone to be selected when afs/ceph/rbd are enabled)
    _ NETWORK_SECMARK=y
    _ RDS=m RDS_TCP=m ATM=m ATM_CLIP=m ART_LANE=m ATM_BR2684=m
    _ BRIDGE=m VLAN_8021Q=m BRIDGE_IGMP_SNOOPING=y BRIDGE_VLAN_FILTERING=y
    _ DECNET=m DECNET_ROUTER=y LLC2=m IPX=m ATALK=m DEV_APPLETALK=m IPDDP=m IPDDP_ENCAP=y X25=m LAPB=m PHONET=m BATMAN_ADV=m BATMAN_ADV_BLA=y BATMAN_ADV_DEBUGFS=y OPENVSWITCH=m OPENVSWITCH_GRE=m VSOCKETS=m
    _ NETLINK_DIAG=m
    _ HSR=m
    _ CGROUP_NET_PRIO=y CGROUP_NET_CLASSID=y BPF_JIT=y
    _ NETFILTER=y NETFILTER_ADVANCED=y BRIDGE_NETFILTER=m
    _ NETFILTER_INGRESS=y NETFILTER_NETLINK_ACCT=m NETFILTER_NETLINK_QUEUE=m NETFILTER_NETLINK_LOG=m NF_LOG_NETDEV=m NF_CONNTRACK=m NF_CONNTRACK_{MARK,SECMARK,EVENTS,TIMEOUT,TIMESTAMP}=y NF_CT_PROTO_{DCCP,SCTP,UDPLITE}=y NF_CONNTRACK_{AMANDA,FTP,H323,IRC,NETBIOS_NS,SNMP,PPTP,SANE,SIP,TFTP,}=m NF_CT_NETLINK{,_TIMEOUT}=m NETFILTER_NETLINK_GLUE_CT=y NF_CT_NETLINK_HELPER=m NF_TABLES{,_{INET,NETDEV}}=m NFT_{EXTHDR,META,RT,NUMGEN,CT,SET_RBTREE,SET_HASH,SET_BITMAP,COUNTER,LOG,LIMIT,NAT,MASQ,REDIR,OBJREF,QUEUE,QUOTA,REJECT,HASH,FIB_INET}=m NF_DUP_NETDEV=m NFT_DUP_NETDEV=m NFT_FWD_NETDEV=m
    _ IP_SET{,_{BITMAP_{IP,IPMAC,PORT},HASH_{IP,IPMARK,IPPORT,IPPORTIP,IPPORTNET,IPMAC,MAC,NETPORTNET,NET,NETNET,NETPORT,NETIFACE},LIST_SET}}=m
    #_ IP_VS=m IP_VS_IPV6=y IP_VS_PROTO_{TCP,UDP,ESP,AH,SCTP}=y IP_VS_{RR,WRR,LC,WLC,FO,OVF,LBLC,LBLCR,DH,SH,SED,NQ}=m IP_VS_FTP=m IP_VS_PE_SIP=m
    # IP_VS disabled for now as it pull in xtables
    _ NF_CONNTRACK_IPV4=m NF_SOCKET_IPV4=m NFT_CHAIN_ROUTE_IPV4=m NFT_DUP_IPV4=m NFT_FIB_IPV4=m NF_TABLES_ARP=m NF_LOG_{ARP,IPV4}=m NF_REJECT_IPV4=m NF_NAT_IPV4=m NFT_CHAIN_NAT_IPV4=m NF_NAT_MASQUERADE_IPV4=m NFT_MASQ_IPV4=m NFT_REDIR_IPV4=m NF_NAT_SNMP_BASIC=m
    _ NF_CONNTRACK_IPV6=m NF_SOCKET_IPV6=m NFT_CHAIN_ROUTE_IPV6=m NFT_DUP_IPV6=m NFT_FIB_IPV6=m NF_LOG_IPV6=m NF_NAT_IPV6=m NFT_CHAIN_NAT_IPV6=m NF_NAT_MASQUERADE_IPV6=m NFT_MASQ_IPV6=m NFT_REDIR_IPV6=m
    _ NF_TABLES_BRIDGE=m NFT_BRIDGE_{META,REJECT}=m NF_LOG_BRIDGE=m
    _ IP_DCCP=m
    _ IP_SCTP=m
    _ TIPC=m TIPC_MEDIA_UDP=y
    _ L2TP=m L2TP_V3=y L2TP_IP=m L2TP_ETH=m
    _ 6LOWPAN{,_NHC,_{DEST,FRAGMENT,HOP,IPV6,MOBILITY,ROUTING,UDP},_GHC_{EXT_HDR_{HOP,DEST,FRAG,ROUTE},UDP,ICMPV6,}}=m
    _ IEEE802154{,_SOCKET,_6LOWPAN}=m
    _ NET_SCHED=y NET_SCH_{CBQ,HTB,HFSC,ATM,PRIO,MULTIQ,RED,SFB,SFQ,TEQL,TBF,GRED,DSMARK,NETEM,DRR,MQPRIO,CHOKE,QFQ,CODEL,FQ_CODEL,FQ,HHF,PIE,INGRESS,PLUG}=m NET_CLS_{BASIC,TCINDEX,ROUTE4,FW,U32,RSVP,RSVP6,FLOW,CGROUP,BPF,FLOWER,MATCHALL,}=m CLS_U32_PERF=y CLS_U32_MARK=y NET_EMATCH=y NET_EMATCH_{CMP,NBYTE,U32,META,TEXT,IPSET}=m NET_CLS_ACT=y NET_ACT_{POLICE,GACT,MIRRED,SAMPLE,NAT,PEDIT,SIMP,SKBEDIT,CSUM,VLAN,BPF,SKBMOD,IFE,TUNNEL_KEY}=m GACT_PROB=y NET_IFE_SKB{MARK,PRIO,TCINDEX}=m NET_CLS_IND=y
    # HAMRADIO..NFC disabled for now
    _ NETDEVICES=y NET_CORE=y BONDING=m DUMMY=m EQUALIZER=m IFB=m NET_TEAM=m NET_TEAM_MODE_{BROADCAST,ROUNDROBIN,RANDOM,ACTIVEBACKUP,LOADBALANCE}=m MACVLAN=m MACVTAP=m VXLAN=m GENEVE=m GTP=m MACSEC=m NETCONSOLE=m TUN=m VETH=m NLMON=m MICREL_KS8995MA=m PPP=m PPP_{BSDCOMP,DEFLATE,MPEE,}=m PPP_FILTER=y PPP_MULTILINK=y PPPOATM=m PPPOE=m PPTP=m PPOL2TP=m PPP_ASYNC=m PPP_SYNC_TTY=m SLIP=m SLIP_COMPRESSED=y SLIP_SMART=y SLIP_MODE_SLIP6=y
    _ ATM_DRIVERS=y ATM_DUMMY=m ATM_TCP=m
    
    # modules (usb ethernet)
    _ USB_NET_DRIVERS=m USB_{CATC,KAWETH,PEGASUS,RTL8150,RTL8152,LAN78XX,IPHETH,USBNET}=m USB_NET_{AX8817X,AX88179_178A,CDCETHER,CDC_{EEM,NCM,MBIM},HUAWEI_CDC_NCM,DM9601,SR9700,SR9800,SMSC75XX,SMSC95XX,GL620A,NET1080,PLUSB,MCS7830,RNDIS_HOST,CDC_SUBSET,ZAURUS,CX82310_ETH,KALMIA,QMI_WWAN,INT51X1,IPHETH,CH9200}=m USB_ALI_M5632=y USB_AN2720=y USB_BELKIN=y USB_ARMLINUX=y USB_EPSON2888=y USB_KC2190=y USB_VL600=m USB_CDC_PHONET=m USB_SIERRA_NET=m
    
    # modules (hid generic)
    _ HID=m HID_GENERIC=m INPUT_MOUSEDEV=m
    
    # modules (usb hid)
    _ USB_HID=m USB_HIDDEV=y
    
    # modules (nbd)
    _ BLK_DEV_NBD=m
    
    # modules (aoe)
    _ ATA_OVER_ETH=m
    
    make allnoconfig KCONFIG_ALLCONFIG=./.config.allconfig ARCH=arm
  )
}

doit
